{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/modify/modify.component.css","webpack:///./src/app/components/modify/modify.component.html","webpack:///./src/app/components/modify/modify.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/func.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"mdl-demo mdl-base\\\">\\r\\n  <div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-tabs\\\">\\r\\n    <!-- <app-navbar></app-navbar> -->\\r\\n\\r\\n    <!-- header for large display -->\\r\\n    <header class=\\\"mdl-layout__header mdl-layout__header--scroll mdl-color--primary\\\">\\r\\n            \\r\\n      <!-- spacing -->\\r\\n      <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\r\\n      \\r\\n      <!-- title -->\\r\\n      <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\">\\r\\n        <h3 [routerLink]=\\\"['/']\\\" style=\\\"cursor: pointer; font-family: 'Ubuntu', sans-serif;\\\">RogueWrite</h3>\\r\\n        <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n        <nav class=\\\"mdl-navigation\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" >\\r\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/login']\\\">LOGIN</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/profile']\\\">PROFILE</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">LOGOUT</a>\\r\\n        </nav>\\r\\n      </div>\\r\\n      \\r\\n      <!-- spacing -->\\r\\n      <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\r\\n\\r\\n      <!-- nav bar -->\\r\\n      <div class=\\\"mdl-layout__tab-bar mdl-js-ripple-effect mdl-color--primary-dark\\\">\\r\\n        <a [routerLink]=\\\"['/']\\\" class=\\\"mdl-layout__tab is-active\\\">HOME</a>\\r\\n        <a href=\\\"board.html\\\" class=\\\"mdl-layout__tab\\\">BOARD</a>\\r\\n        <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">Details</a>\\r\\n        <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">Technology</a>\\r\\n        <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">FAQ</a>\\r\\n      </div>\\r\\n    </header>\\r\\n\\r\\n    <!-- header for mobile -->\\r\\n    <header class=\\\"mdl-layout__header--scroll mdl-layout--small-screen-only mdl-color--primary\\\">\\r\\n      <div class=\\\"mdl-layout__header-row\\\">\\r\\n        <h3 class=\\\"mdl-navigation__link\\\" style=\\\"font-family: 'Ubuntu', sans-serif;\\\">RogueWrite</h3>\\r\\n        <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n        <nav class=\\\"mdl-navigation\\\">\\r\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/login']\\\">LOGIN</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/profile']\\\">PROFILE</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">LOGOUT</a>\\r\\n        </nav>\\r\\n      </div>\\r\\n    </header>\\r\\n    <div class=\\\"mdl-layout__drawer mdl-layout--small-screen-only\\\">\\r\\n      <span class=\\\"mdl-layout__title\\\" style=\\\"font-family: 'Ubuntu', sans-serif;\\\">RogueWrite</span>\\r\\n      <nav class=\\\"mdl-navigation\\\">\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu1</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu2</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu3</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu4</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu5</a>\\r\\n      </nav>\\r\\n    </div>\\r\\n\\r\\n    <ng-flash-message></ng-flash-message>\\r\\n    <main class=\\\"mdl-layout__content\\\">\\r\\n      <div class=\\\"mdl-layout__tab-panel is-active\\\" id=\\\"overview\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n        <!-- <section></section> -->\\r\\n      </div>\\r\\n\\r\\n      <!-- footer -->\\r\\n      <footer class=\\\"mdl-mega-footer\\\">\\r\\n        <div class=\\\"mdl-mega-footer--bottom-section\\\">\\r\\n          <div class=\\\"mdl-logo\\\">\\r\\n            powered by Project RogueWrite\\r\\n          </div>\\r\\n          <ul class=\\\"mdl-mega-footer--link-list\\\">\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://getmdl.io/index.html\\\">MDL</a></li>\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://github.com/p9595jh/RogueWrite\\\">Github</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- footer -->\\r\\n\\r\\n    </main>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-src in MEANAuthApp';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n    ) { }\r\n\r\n  onLogoutClick() {\r\n    this.authService.logout();\r\n    this.flashMessage.showFlashMessage({\r\n      messages: ['You are logged out'], \r\n      type: 'success', \r\n      timeout: 3000\r\n    });\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatInputModule } from '@angular/material';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { ModifyComponent } from './components/modify/modify.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'modify', component: ModifyComponent }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    ModifyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(appRoutes, {useHash: true}),\r\n    NgFlashMessagesModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatToolbarModule\r\n  ],\r\n  providers: [\r\n    ValidateService,\r\n    AuthService,\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>사이트 개요</h4><hr/>\\r\\n      간략한 설명 <br/>\\r\\n      이 사이트는 이러이러한 것을 하는 것이다 라던가 <br/>\\r\\n      아님 뭐 이미지를 넣던가 그런거 <br/>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>자유게시판</h4><hr/>\\r\\n      <ul>\\r\\n        <li>게시글1</li>\\r\\n        <li>게시글2</li>\\r\\n        <li>게시글3</li>\\r\\n        <li>게시글4</li>\\r\\n        <li>게시글5</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"btn1\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"btn1\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\" disabled>자주 가는 게시판으로 설정</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>다른게시판</h4><hr/>\\r\\n      <ul>\\r\\n        <li>게시글1</li>\\r\\n        <li>게시글2</li>\\r\\n        <li>게시글3</li>\\r\\n        <li>게시글4</li>\\r\\n        <li>게시글5</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"btn2\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"btn2\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\" disabled>자주 가는 게시판으로 설정</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>로그인</h4><hr/>\\r\\n      \\r\\n      <br/><br/>\\r\\n      <!-- <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"userid\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"userid\\\">아이디</label>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"password\\\" id=\\\"pw\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"pw\\\">비밀번호</label>\\r\\n          </div>\\r\\n          <br/><br/><br/>\\r\\n          <input type=\\\"submit\\\" value=\\\"로그인\\\" class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\">\\r\\n          <br/><br/><br/><hr/>\\r\\n          <a [routerLink]=\\\"['../register']\\\" style=\\\"color: black; text-decoration: none;\\\">회원가입</a>\\r\\n          &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\\r\\n          <a href=\\\"#\\\" style=\\\"color: black; text-decoration: none;\\\">아이디/비밀번호 찾기</a>\\r\\n\\r\\n        </div>\\r\\n      </form> -->\\r\\n\\r\\n      <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" id=\\\"userid\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" id=\\\"pw\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/><br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\">로그인</button>\\r\\n          <br/><br/><br/><hr/>\\r\\n          <a [routerLink]=\\\"['../register']\\\" style=\\\"color: black; text-decoration: none;\\\">회원가입</a>\\r\\n          &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\\r\\n          <a href=\\\"#\\\" style=\\\"color: black; text-decoration: none;\\\">아이디/비밀번호 찾기</a>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n<br/><br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  userid: String;\r\n  pw: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    // console.log(this.username);\r\n    const user = {\r\n      userid: this.userid,\r\n      pw: this.pw\r\n    }\r\n\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.authService.storeUserData(data.token, data.user);\r\n        // this.flashMessage.showFlashMessage({\r\n        //   messages: [data.msg], \r\n        //   type: 'success', \r\n        //   timeout:3000\r\n        // });\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n            messages: [data.msg], \r\n            type: 'danger', \r\n            timeout:3000\r\n          });\r\n          this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  modify works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modify',\n  templateUrl: './modify.component.html',\n  styleUrls: ['./modify.component.css']\n})\nexport class ModifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- header for large display -->\\n<header class=\\\"mdl-layout__header mdl-layout__header--scroll mdl-color--primary\\\">\\n        \\n  <!-- spacing -->\\n  <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\n  \\n  <!-- title -->\\n  <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\">\\n    <h3>Title being here</h3>\\n    <div class=\\\"mdl-layout-spacer\\\"></div>\\n    <nav class=\\\"mdl-navigation\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" >\\n      <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/login']\\\">LOGIN</a>\\n      <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">LOGOUT</a>\\n    </nav>\\n  </div>\\n  \\n  <!-- spacing -->\\n  <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\n\\n  <!-- nav bar -->\\n  <div class=\\\"mdl-layout__tab-bar mdl-js-ripple-effect mdl-color--primary-dark\\\">\\n    <a [routerLink]=\\\"['/']\\\" class=\\\"mdl-layout__tab\\\">HOME</a>\\n    <a href=\\\"board.html\\\" class=\\\"mdl-layout__tab\\\">BOARD</a>\\n    <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">Details</a>\\n    <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">Technology</a>\\n    <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">FAQ</a>\\n  </div>\\n</header>\\n\\n<!-- header for mobile -->\\n<header class=\\\"mdl-layout__header--scroll mdl-layout--small-screen-only mdl-color--primary\\\">\\n  <div class=\\\"mdl-layout__header-row\\\">\\n    <h3 class=\\\"mdl-navigation__link\\\">RWriter</h3>\\n    <div class=\\\"mdl-layout-spacer\\\"></div>\\n    <nav class=\\\"mdl-navigation\\\">\\n      <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">LOGIN</a>\\n    </nav>\\n  </div>\\n</header>\\n<div class=\\\"mdl-layout__drawer mdl-layout--small-screen-only\\\">\\n  <span class=\\\"mdl-layout__title\\\">RWriter</span>\\n  <nav class=\\\"mdl-navigation\\\">\\n    <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu1</a>\\n    <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu2</a>\\n    <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu3</a>\\n    <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu4</a>\\n    <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu5</a>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: NgFlashMessageService\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.showFlashMessage({\n      messages: ['You are logged out'], \n      type: 'success', \n      timeout: 3000\n    });\n    this.router.navigate(['login']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section *ngIf=\\\"user\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\n    <div class=\\\"mdl-card__supporting-text\\\">\\n      <h4>PROFILE &nbsp;-&nbsp; {{user.userid}}</h4>\\n      <hr/><br/>\\n      \\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 80%;\\\">\\n        <tbody>\\n          <tr>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">아이디</td>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.userid}}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">닉네임</td>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.nickname}}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">이메일</td>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.email}}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">한 줄 소개</td>\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.introduction}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <br/><br/>\\n\\n      <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\" style=\\\"float: right;\\\" [routerLink]=\\\"['./modify']\\\">\\n        회원정보 수정\\n      </button>\\n\\n    </div>\\n  </div>\\n</section>\\n\\n<section></section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    }, \n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>회원가입</h4><hr/>\\r\\n      \\r\\n      <br/><br/>\\r\\n\\r\\n      <form (submit)=\\\"onRegisterSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"userid\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"userid\\\">아이디</label>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"password\\\" id=\\\"pw\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"pw\\\">비밀번호</label>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"password\\\" id=\\\"pwchk\\\" name=\\\"pwchk\\\" [(ngModel)]=\\\"pwchk\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"pwchk\\\">비밀번호 확인</label>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"nickname\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"nickname\\\">닉네임</label>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" pattern=\\\"^[0-9a-zA-Z_-]+(\\\\.[0-9a-zA-Z_-]+)*@([0-9a-zA-Z_-]+)(\\\\.[0-9a-zA-Z_-]+){1,2}$\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"email\\\">이메일</label>\\r\\n            <span class=\\\"mdl-textfield__error\\\">이메일을 입력해야 합니다.</span>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"introduction\\\" name=\\\"introduction\\\" [(ngModel)]=\\\"introduction\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"introduction\\\">한 줄 소개</label>\\r\\n          </div>\\r\\n          <br/><br/>\\r\\n          <br/>\\r\\n          <input type=\\\"submit\\\" value=\\\"회원가입\\\" class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\">\\r\\n          <br/><br/><br/><hr/>\\r\\n          여기에다가 뭔가 알려둘 사항 같은 걸 써두면 됨\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  userid: String;\r\n  pw: String;\r\n  pwchk: String;\r\n  nickname: String;\r\n  email: String;\r\n  introduction: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService, \r\n    private flashMessage: NgFlashMessageService, \r\n    private authService: AuthService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    const user = {\r\n      userid: this.userid,\r\n      pw: this.pw,\r\n      pwchk: this.pwchk,\r\n      nickname: this.nickname,\r\n      email: this.email,\r\n      introduction: this.introduction\r\n    }\r\n\r\n    // Required Fields\r\n    if ( !this.validateService.validateRegister(user) ) {\r\n      this.flashMessage.showFlashMessage({messages: ['빈 항목이 있습니다'], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Password check\r\n    if ( this.pw != this.pwchk ) {\r\n      this.flashMessage.showFlashMessage({messages: ['비밀번호가 일치하지 않습니다'], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Check with conditions\r\n    let conditions: any = this.validateService.validateConditions(user);\r\n    if ( !conditions.valid ) {\r\n      this.flashMessage.showFlashMessage({messages: [conditions.msg], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Validate Email\r\n    if( !this.validateService.validateEmail(user.email) ) {\r\n      this.flashMessage.showFlashMessage({messages: ['이메일 형식이 맞지 않습니다'], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Register User\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['회원가입 완료 - 로그인 해주십시오'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n        this.router.navigate(['/register']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService:AuthService, \n    private router:Router\n    ){\n  }\n\n   canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { FuncService } from './func.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService\r\n  ) { }\r\n\r\n  registerUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/register', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/authenticate', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getProfile() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/users/profile', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n   loggedIn() {\r\n    return tokenNotExpired('id_token');\r\n   }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FuncService {\r\n  public ServerAddress: String = \"http://localhost:3000\";\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if ( user.userid == undefined || user.email == undefined || user.pw == undefined || user.pwchk == undefined || user.introduction == undefined ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateConditions(user) {\r\n    // let idvalid = /^[a-z]+[a-z0-9]{6,15}$/g;\r\n    // if ( !idvalid.test(user.userid) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '아이디는 영어, 숫자로 이루어진 6~15 글자여야 합니다'\r\n    //   };\r\n    // }\r\n\r\n    // let pwvalid = /^{10,}/;\r\n    // if ( !pwvalid.test(user.pw) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '비밀번호는 10글자 이상이어야 합니다'\r\n    //   }\r\n    // }\r\n\r\n    return {\r\n      valid: true\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}
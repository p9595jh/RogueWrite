{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/board/board.component.css","webpack:///./src/app/components/board/board.component.dialog.html","webpack:///./src/app/components/board/board.component.html","webpack:///./src/app/components/board/board.component.reply.html","webpack:///./src/app/components/board/board.component.ts","webpack:///./src/app/components/corvee/corvee.component.css","webpack:///./src/app/components/corvee/corvee.component.html","webpack:///./src/app/components/corvee/corvee.component.ts","webpack:///./src/app/components/cwrite/cwrite.component.css","webpack:///./src/app/components/cwrite/cwrite.component.html","webpack:///./src/app/components/cwrite/cwrite.component.ts","webpack:///./src/app/components/game/game.component.css","webpack:///./src/app/components/game/game.component.dialog.html","webpack:///./src/app/components/game/game.component.html","webpack:///./src/app/components/game/game.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/modify/modify.component.css","webpack:///./src/app/components/modify/modify.component.html","webpack:///./src/app/components/modify/modify.component.ts","webpack:///./src/app/components/no-page/no-page.component.css","webpack:///./src/app/components/no-page/no-page.component.html","webpack:///./src/app/components/no-page/no-page.component.ts","webpack:///./src/app/components/play/play.component.css","webpack:///./src/app/components/play/play.component.html","webpack:///./src/app/components/play/play.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/sub/sub.component.css","webpack:///./src/app/components/sub/sub.component.html","webpack:///./src/app/components/sub/sub.component.ts","webpack:///./src/app/components/temp/temp.component.css","webpack:///./src/app/components/temp/temp.component.dialog.html","webpack:///./src/app/components/temp/temp.component.html","webpack:///./src/app/components/temp/temp.component.ts","webpack:///./src/app/components/test/test.component.css","webpack:///./src/app/components/test/test.component.html","webpack:///./src/app/components/test/test.component.ts","webpack:///./src/app/components/tool/tool.component.css","webpack:///./src/app/components/tool/tool.component.html","webpack:///./src/app/components/tool/tool.component.ts","webpack:///./src/app/components/write/write.component.css","webpack:///./src/app/components/write/write.component.html","webpack:///./src/app/components/write/write.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/component-can-deactivate.ts","webpack:///./src/app/guards/deactivate.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/board.service.ts","webpack:///./src/app/services/corvee.service.ts","webpack:///./src/app/services/func.service.ts","webpack:///./src/app/services/game.service.ts","webpack:///./src/app/services/home.service.ts","webpack:///./src/app/services/play.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/pipes/safeHtml.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".nav-link {\\r\\n    color: black;\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    padding: 20px;\\r\\n    padding-left: 12%;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n    background-color: rgb(202, 202, 202);\\r\\n}\\r\\n\\r\\n.header-sm-icon {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osY0FBYztJQUNkLFdBQVc7SUFDWCxhQUFhO0lBQ2IsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1saW5rIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMiU7XHJcbn1cclxuXHJcbi5uYXYtbGluazpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjAyLCAyMDIsIDIwMik7XHJcbn1cclxuXHJcbi5oZWFkZXItc20taWNvbiB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuIl19 */\"","module.exports = \"<ng-flash-message class=\\\"mdl-layout--large-screen-only\\\"></ng-flash-message>\\r\\n\\r\\n<div class=\\\"mdl-demo mdl-base\\\">\\r\\n  <div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-tabs\\\">\\r\\n\\r\\n    <!-- header for large display -->\\r\\n    <mat-toolbar class=\\\"mdl-layout--large-screen-only mdl-shadow--2dp mdl-layout__header\\\" style=\\\"background-color: white;\\\">\\r\\n      <mat-toolbar-row>\\r\\n        <img src=\\\"/images/title.png\\\" [routerLink]=\\\"['/']\\\" style=\\\"cursor: pointer; width: 210px; height: auto; padding-left: 10px;\\\" />\\r\\n        <span style=\\\"flex: 1 1 auto;\\\"></span>\\r\\n        <a mat-button *ngFor=\\\"let link of navLinks\\\" color=\\\"primary\\\"\\r\\n          [routerLink]=\\\"[link.path]\\\">{{link.label}}</a>\\r\\n        <a mat-button *ngFor=\\\"let link of moreLinks\\\"\\r\\n          [routerLink]=\\\"[link.path]\\\">{{link.label}}</a>\\r\\n        <a mat-icon-button *ngIf=\\\"!authService.loggedIn()\\\" [routerLink]=\\\"['/login']\\\">\\r\\n          <mat-icon>lock</mat-icon>\\r\\n        </a>\\r\\n        <a mat-icon-button *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/profile']\\\">\\r\\n          <mat-icon>account_circle</mat-icon>\\r\\n        </a>\\r\\n        <a mat-icon-button *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">\\r\\n          <mat-icon>lock_open</mat-icon>\\r\\n        </a>\\r\\n      </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <!-- header for mobile -->\\r\\n    <header class=\\\"mdl-layout__header--scroll mdl-layout--small-screen-only\\\">\\r\\n      <nav class=\\\"navbar navbar-white fixed-top bg-white mdl-shadow--2dp\\\">\\r\\n        <div>\\r\\n          <button mat-icon-button type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n            <mat-icon class=\\\"header-sm-icon\\\">reorder</mat-icon>\\r\\n          </button>\\r\\n          <img src=\\\"/images/title.png\\\" style=\\\"height: 20px; width: auto;\\\" [routerLink]=\\\"['/']\\\" />\\r\\n        </div>\\r\\n        <table id=\\\"header-sm-table\\\">\\r\\n          <tr>\\r\\n            <td *ngIf=\\\"!authService.loggedIn()\\\">\\r\\n              <a mat-icon-button [routerLink]=\\\"['/login']\\\">\\r\\n                <mat-icon class=\\\"header-sm-icon\\\">lock</mat-icon>\\r\\n              </a>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"authService.loggedIn()\\\">\\r\\n              <a mat-icon-button [routerLink]=\\\"['/profile']\\\">\\r\\n                <mat-icon class=\\\"header-sm-icon\\\">account_circle</mat-icon>\\r\\n              </a>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"authService.loggedIn()\\\">\\r\\n              <a mat-icon-button (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">\\r\\n                <mat-icon class=\\\"header-sm-icon\\\">lock_open</mat-icon>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\r\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item active\\\" *ngFor=\\\"let link of navLinks\\\"\\r\\n              data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\"\\r\\n              aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n              <a class=\\\"nav-link header-sm-link\\\" [routerLink]=\\\"[link.path]\\\">{{link.label}}</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item active\\\" *ngFor=\\\"let link of moreLinks\\\"\\r\\n              data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\"\\r\\n              aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n              <a class=\\\"nav-link header-sm-link\\\" [routerLink]=\\\"[link.path]\\\">{{link.label}}</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </nav>\\r\\n      <ng-flash-message class=\\\"mdl-layout--small-screen-only\\\"></ng-flash-message>\\r\\n      <br/><br/>\\r\\n    </header>\\r\\n\\r\\n    <main class=\\\"mdl-layout__content\\\">\\r\\n      <!-- <div class=\\\"mdl-layout__tab-panel is-active\\\" id=\\\"overview\\\"> -->\\r\\n      <div class=\\\"is-active\\\" id=\\\"overview\\\">\\r\\n        <div *ngIf=\\\"router.url != '/'\\\"><br/><br/></div>\\r\\n        <router-outlet></router-outlet>\\r\\n        <br/><br/>\\r\\n      </div>\\r\\n\\r\\n      <!-- footer -->\\r\\n      <footer class=\\\"mdl-mega-footer\\\">\\r\\n        <div class=\\\"mdl-mega-footer--bottom-section\\\">\\r\\n          <div class=\\\"mdl-logo\\\">\\r\\n            powered by Project RogueWrite\\r\\n          </div>\\r\\n          <ul class=\\\"mdl-mega-footer--link-list\\\">\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://getmdl.io/index.html\\\">MDL</a></li>\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://material.angular.io/\\\">Angular Material</a></li>\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://github.com/p9595jh/RogueWrite\\\">Github</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- footer -->\\r\\n\\r\\n    </main>\\r\\n    <div *ngIf=\\\"router.url.startsWith('/play')\\\" style=\\\"background-color: white;\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Input, HostListener } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FuncService } from './services/func.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  siteName = 'ЯogueWrite';\r\n  navLinks = [\r\n    { label: '게임게시판', path: '/game/list' },\r\n    { label: '블록게시판', path: '/corvee/list' }\r\n  ];\r\n  moreLinks = [\r\n    { label: '자유게시판', path: '/board/free/list' },\r\n    { label: '서브게시판', path: '/sub' },\r\n    { label: '공지사항', path: '/board/notice/list' }\r\n  ];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private funcService: FuncService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  onLogoutClick() {\r\n    this.authService.logout();\r\n    this.flashMessage.showFlashMessage({\r\n      messages: ['로그아웃 되었습니다.'], \r\n      type: 'success', \r\n      timeout: 2000\r\n    });\r\n    // this.router.navigate([this.funcService.getPreviousUrl()]);\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport {  // angular-material modules\r\n  ErrorStateMatcher,\r\n  ShowOnDirtyErrorStateMatcher,\r\n  MatInputModule,\r\n  MatTableModule,\r\n  MatFormFieldModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatTabsModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatBottomSheetModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatAutocompleteModule,\r\n  MatButtonToggleModule,\r\n  MatPaginatorModule,\r\n  MatSnackBarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n  MatExpansionModule,\r\n  MatDialogModule,\r\n  MatCardModule\r\n} from '@angular/material';\r\n\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { DeactivateGuard } from './guards/deactivate.guard';\r\nimport { SafeHtml } from '../pipes/safeHtml';\r\nimport { NgxEditorModule } from 'ngx-editor';\r\nimport { TooltipModule } from 'ngx-bootstrap';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { ModifyComponent } from './components/modify/modify.component';\r\nimport { BoardComponent, CommentDialog, ReplyDialog } from './components/board/board.component';\r\nimport { WriteComponent } from './components/write/write.component';\r\nimport { NoPageComponent } from './components/no-page/no-page.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { ToolComponent } from './components/tool/tool.component';\r\nimport { GameComponent, ScrapDialog } from './components/game/game.component';\r\nimport { SubComponent } from './components/sub/sub.component';\r\nimport { TempComponent, TempDialog } from './components/temp/temp.component';\r\nimport { CorveeComponent } from './components/corvee/corvee.component';\r\nimport { CwriteComponent } from './components/cwrite/cwrite.component';\r\nimport { PlayComponent } from './components/play/play.component';\r\nimport { TestComponent } from './components/test/test.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'modify', component: ModifyComponent, canActivate: [AuthGuard] },\r\n  { path: 'board/:type/:num', component: BoardComponent },\r\n  { path: 'write/:type', component: WriteComponent, canActivate: [AuthGuard] },\r\n  { path: 'test', component: TestComponent },\r\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard] },\r\n  { path: 'game/:num', component: GameComponent },\r\n  { path: 'tool', component: ToolComponent, canActivate: [AuthGuard] },\r\n  { path: 'sub', component: SubComponent },\r\n  { path: 'temp/:num', component: TempComponent, canActivate: [AuthGuard] },\r\n  { path: 'corvee/:num', component: CorveeComponent },\r\n  { path: 'cwrite', component: CwriteComponent, canActivate: [AuthGuard] },\r\n  { path: 'play/:num', component: PlayComponent },\r\n  { path: 'no-page', component: NoPageComponent },\r\n  { path: '**', component: NoPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SafeHtml,\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    ModifyComponent,\r\n    BoardComponent,\r\n    CommentDialog,\r\n    ReplyDialog,\r\n    WriteComponent,\r\n    NoPageComponent,\r\n    AdminComponent,\r\n    ToolComponent,\r\n    GameComponent,\r\n    ScrapDialog,\r\n    SubComponent,\r\n    TempComponent,\r\n    TempDialog,\r\n    CorveeComponent,\r\n    CwriteComponent,\r\n    PlayComponent,\r\n    TestComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes, {\r\n      useHash: true,\r\n      onSameUrlNavigation: 'reload'\r\n    }),\r\n    NgFlashMessagesModule,\r\n    CommonModule,\r\n    FroalaEditorModule.forRoot(),\r\n    FroalaViewModule.forRoot(),\r\n    NgxEditorModule,\r\n    TooltipModule.forRoot(),\r\n\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatBottomSheetModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatAutocompleteModule,\r\n    MatButtonToggleModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    ScrapDialog,\r\n    TempDialog,\r\n    CommentDialog,\r\n    ReplyDialog\r\n  ],\r\n  entryComponents: [\r\n    ScrapDialog,\r\n    TempDialog,\r\n    CommentDialog,\r\n    ReplyDialog\r\n  ],\r\n  providers: [\r\n    ValidateService,\r\n    AuthService,\r\n    AuthGuard,\r\n    DeactivateGuard,\r\n    { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n  schemas: [\r\n    NO_ERRORS_SCHEMA,\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>회원 관리</h4>\\r\\n      <hr/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">아이디</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">닉네임</th>\\r\\n            <th>상태</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of users | slice:memberPagingFrom:memberPagingTo;\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <span (click)=\\\"funcService.openInfoWindow(val?.userid)\\\" class=\\\"toProfile\\\">{{val.userid}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val.nickname}}</td>\\r\\n            <td *ngIf=\\\"val?.clean\\\">\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"administrate(val?._id, val?.clean)\\\">정상</button>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"!val?.clean\\\">\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"administrate(val?._id, val?.clean)\\\">정지</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"users?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"memberPaging($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>게시판 생성 요청 관리</h4>\\r\\n      <hr/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">요청자</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">요청 게임</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">추천 비율</th>\\r\\n            <th>처리</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <!-- <tr *ngIf=\\\"val?.userid != 'admin'\\\"> -->\\r\\n          <tr *ngFor=\\\"let val of games | slice:reqPagingFrom:reqPagingTo;\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <span (click)=\\\"funcService.openInfoWindow(val?.userid)\\\" class=\\\"toProfile\\\">{{val.nickname}} ({{val.userid}})</span>\\r\\n            </td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a [routerLink]=\\\"['/game/' + val?._id]\\\" target=\\\"_blank\\\" style=\\\"color: black;\\\">{{val.title}}</a>\\r\\n            </td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val.recommend}}/{{val.unrecommend}}</td>\\r\\n            <td>\\r\\n              <button mat-button color=\\\"primary\\\" [attr.id]=\\\"'accept-'+val?._id\\\"\\r\\n                (click)=\\\"acceptRequest(val?._id, val?.title, val?.userid, true)\\\">수락</button>\\r\\n              <button mat-button color=\\\"warn\\\" [attr.id]=\\\"'reject-'+val?._id\\\"\\r\\n                (click)=\\\"acceptRequest(val?._id, null, null, false)\\\">거절</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"users?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"reqPaging($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { GameService } from '../../services/game.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n\r\n  users: any[];\r\n  games: any[];\r\n\r\n  pagingSize = 25;\r\n  memberPagingFrom: Number = 0;\r\n  memberPagingTo: Number = this.pagingSize;\r\n  reqPagingFrom: Number = 0;\r\n  reqPagingTo: Number = this.pagingSize;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private gameService: GameService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) {\r\n    this.funcService.setTitle('어드민');\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      if ( profile.user.userid != 'admin' ) {\r\n        this.router.navigate(['/no-page']);\r\n        return false;\r\n      } else {\r\n        this.authService.getAllUsers().subscribe(data => {\r\n          this.users = data.users;\r\n          this.gameService.takeRequestedPosts().subscribe(result => {\r\n            this.games = result.posts;\r\n          })\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  memberPaging(pageEvent: PageEvent) {\r\n    this.memberPagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.memberPagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  reqPaging(pageEvent: PageEvent) {\r\n    this.reqPagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.reqPagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  administrate(_id, clean: Boolean) {\r\n    const work: string = clean ? '정지' : '해제';\r\n    if ( confirm(work + '하시겠습니까?') ) {\r\n      this.authService.administrateUser(_id, clean).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [work + '되었습니다.'], \r\n            type: 'success', \r\n            timeout: 2000\r\n          });\r\n          this.router.navigate(['/admin']);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  acceptRequest(_id, title, userid, accept: boolean) {\r\n    const work: string = accept ? '수락' : '거절';\r\n    if ( confirm(work + '하시겠습니까?') ) {\r\n      if ( accept ) {\r\n        this.gameService.acceptBoard(_id, title, userid).subscribe(result => {\r\n          if ( result.success ) {\r\n            (<HTMLButtonElement> document.getElementById('accept-' + _id)).disabled = true;\r\n            (<HTMLButtonElement> document.getElementById('reject-' + _id)).disabled = true;\r\n            this.flashMessage.showFlashMessage({\r\n              messages: [work + '되었습니다.'], \r\n              type: 'success', \r\n              timeout: 2000\r\n            });\r\n            this.router.navigate(['/admin']);\r\n          } else {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: [result.msg],\r\n              type: 'danger',\r\n              timeout: 3000\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.gameService.rejectBoard(_id).subscribe(result => {\r\n          if ( result.success ) {\r\n            (<HTMLButtonElement> document.getElementById('accept-' + _id)).disabled = true;\r\n            (<HTMLButtonElement> document.getElementById('reject-' + _id)).disabled = true;\r\n            this.flashMessage.showFlashMessage({\r\n              messages: [work + '되었습니다.'], \r\n              type: 'success', \r\n              timeout: 2000\r\n            });\r\n            this.router.navigate(['/admin']);\r\n          } else {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: [result.msg],\r\n              type: 'danger',\r\n              timeout: 3000\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".boardTitle {\\r\\n    color: white;\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib2FyZC9ib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9hcmRUaXRsZSB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbn1cclxuIl19 */\"","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>댓글을 쓸 상대를 골라주세요.</p>\\r\\n  <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n    <mat-label>선택</mat-label>\\r\\n    <mat-select [(ngModel)]=\\\"data.user\\\">\\r\\n      <mat-option *ngFor=\\\"let comment of data.comment\\\" [value]=\\\"comment\\\">\\r\\n        {{comment.nickname}} ({{comment.userid}})\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onClose()\\\">닫기</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.user\\\" cdkFocusInitial>확인</button>\\r\\n</div>\\r\\n\"","module.exports = \"<!-- element for representing the location of the post to be scrolled -->\\r\\n<span style=\\\"display: hidden;\\\" #postLocation></span>\\r\\n\\r\\n<!-- section for a post -->\\r\\n<section *ngIf=\\\"num != 'list'\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">{{content?.title}}</h4>\\r\\n\\r\\n      <span style=\\\"float: right; text-align: right; font-size: 80%;\\\">\\r\\n        <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(content?.userid)\\\">{{content?.nickname}}</span><br/>{{content?.writedate}}\\r\\n      </span>\\r\\n      <hr/>\\r\\n      <div class=\\\"posting content\\\" [innerHtml]=\\\"content?.content | safe\\\"></div>\\r\\n      <br/><br/>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onRecommend()\\\">\\r\\n          추천 {{content?.recommend?.length}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <br/><hr/>\\r\\n\\r\\n      <!-- ############### table for comments ############### -->\\r\\n      <table class=\\\"cmtTable\\\">\\r\\n        <tbody *ngFor=\\\"let comment of content?.comment\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 90px;\\\">\\r\\n              <img [attr.src]=\\\"'images/profile/' + comment.userid\\\" class=\\\"profileImage\\\" (click)=\\\"onReplyComment(comment)\\\" />\\r\\n            </td>\\r\\n            <td>\\r\\n              <span style=\\\"font-size: 80%;\\\">\\r\\n                <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(comment?.userid)\\\">\\r\\n                  {{comment?.nickname}}</span> &nbsp;|&nbsp; {{comment?.writedate}}\\r\\n                <span *ngIf=\\\"comment?.userid == user?.userid || user?.userid == 'admin'\\\"> &nbsp;|&nbsp; \\r\\n                  <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemoveComment(comment.num)\\\">삭제</span>\\r\\n                </span>\\r\\n              </span>\\r\\n              <pre class=\\\"content writerText\\\" *ngIf=\\\"comment?.userid == content?.userid\\\" [innerHTML]=\\\"comment?.comment | safe\\\"></pre>\\r\\n              <pre class=\\\"content\\\" *ngIf=\\\"comment?.userid != content?.userid\\\" [innerHTML]=\\\"comment?.comment | safe\\\"></pre>\\r\\n              <br/>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"comment?.reply?.length > 0\\\">\\r\\n            <td colspan=\\\"2\\\">\\r\\n              <table class=\\\"rplyTable\\\">\\r\\n                <tr *ngFor=\\\"let reply of comment?.reply\\\">\\r\\n                  <td class=\\\"rply-blank\\\"></td>\\r\\n                  <td style=\\\"width: 90px;\\\">\\r\\n                    <img [attr.src]=\\\"'images/profile/' + reply.userid\\\" class=\\\"profileImage\\\" />\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <span style=\\\"font-size: 80%;\\\">\\r\\n                      <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(reply?.userid)\\\">\\r\\n                        {{reply?.nickname}}</span> &nbsp;|&nbsp; {{reply?.writedate}}\\r\\n                      <span *ngIf=\\\"reply?.userid == user?.userid || user?.userid == 'admin'\\\"> &nbsp;|&nbsp; \\r\\n                        <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemoveReply(comment?.num, reply)\\\">삭제</span>\\r\\n                      </span>\\r\\n                    </span>\\r\\n                    <pre class=\\\"content writerText\\\" *ngIf=\\\"reply?.userid == content?.userid\\\" [innerHTML]=\\\"reply?.comment | safe\\\"></pre>\\r\\n                    <pre class=\\\"content\\\" *ngIf=\\\"reply?.userid != content?.userid\\\" [innerHTML]=\\\"reply?.comment | safe\\\"></pre>\\r\\n                    <br/>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n      <!-- ############### table for comments ############### -->\\r\\n\\r\\n      <!-- ############### writing area ############### -->\\r\\n      <form *ngIf=\\\"authService.loggedIn() && user?.clean\\\" (submit)=\\\"onWriteComment(field)\\\"><hr *ngIf=\\\"content?.comment?.length > 0\\\" />\\r\\n        <table style=\\\"width: 96%; margin: auto;\\\">\\r\\n          <tr style=\\\"text-align: center;\\\">\\r\\n\\r\\n            <td rowspan=\\\"2\\\" style=\\\"width: 85%;\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%; height: 100%;\\\">\\r\\n                <mat-label>댓글을 작성해주세요.</mat-label>\\r\\n                <textarea matInput rows=\\\"3\\\" name=\\\"cmtWrite\\\"\\r\\n                  [formControl]=\\\"cmtWrite\\\" #field\\r\\n                  (input)=\\\"onTypingComment(field, $event.target.value)\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"text-align: center; padding-bottom: 3%;\\\">\\r\\n              <button mat-raised-button type=\\\"submit\\\" style=\\\"width: 60%;\\\">작성</button>\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n        </table>\\r\\n      </form>\\r\\n      <!-- ############### writing area ############### -->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"aboutPost\\\">\\r\\n    <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #aboutPost>\\r\\n    <button mat-menu-item *ngIf=\\\"content?.userid == user?.userid || user?.userid == 'admin'\\\" (click)=\\\"onRemovePost()\\\">\\r\\n      <span>삭제</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</section>\\r\\n\\r\\n<!-- section for a board -->\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n\\r\\n    <div [class]=\\\"'mdl-card__title bg-svg-' + svg\\\" style=\\\"width: 100%; height: 10rem;\\\">\\r\\n      <h2 class=\\\"mdl-card__title-text boardTitle\\\" *ngIf=\\\"type == 'free'\\\">자유게시판&nbsp;</h2>\\r\\n      <h2 class=\\\"mdl-card__title-text boardTitle\\\" *ngIf=\\\"type == 'notice'\\\">공지게시판&nbsp;</h2>\\r\\n      <h2 class=\\\"mdl-card__title-text boardTitle\\\" *ngIf=\\\"type != 'free' && type != 'notice'\\\">{{sub?.title}} 게시판&nbsp;</h2>\\r\\n      <h5 class=\\\"mdl-card__title-text boardTitle\\\" *ngIf=\\\"authService.loggedIn() && !isMyBookmark\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"bookmark()\\\">☆</h5>\\r\\n      <h5 class=\\\"mdl-card__title-text boardTitle\\\" *ngIf=\\\"authService.loggedIn() && isMyBookmark\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"unbookmark()\\\">★</h5>\\r\\n    </div>\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      \\r\\n      <!-- for large display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--large-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">날짜</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th>글쓴이</th>\\r\\n            <th>조회수</th>\\r\\n            <th>추천</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of contents | slice:pagingFrom:pagingTo; let i=index\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{extractDate(val.writedate)}}</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a [routerLink]=\\\"['/board/'+type+'/'+val?._id]\\\"\\r\\n                style=\\\"color: black; text-decoration: none; font-weight: 400;\\\"\\r\\n                (click)=\\\"scrollToPost(postLocation)\\\">{{val.title}}</a>&nbsp;\\r\\n              <span *ngIf=\\\"val.comment.length > 0\\\" style=\\\"font-size: 85%; color: grey;\\\">[{{countComments(val.comment)}}]</span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(val?.userid)\\\">{{val.nickname}}</span>\\r\\n            </td>\\r\\n            <td>{{val.hit}}</td>\\r\\n            <td>{{val.recommend.length}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <!-- for small display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--small-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of contents | slice:pagingFrom:pagingTo; let i=index\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\"\\r\\n              [routerLink]=\\\"['/board/'+type+'/'+val?._id]\\\" (click)=\\\"scrollToPost(postLocation)\\\">\\r\\n              <div>\\r\\n                {{val.title}}\\r\\n                <span *ngIf=\\\"val.comment.length > 0\\\" style=\\\"color: grey;\\\">[{{countComments(val.comment)}}]</span>\\r\\n              </div>\\r\\n              <div style=\\\"font-size: 85%; margin-top: 1%;\\\">\\r\\n                <span>{{val.nickname}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>조회 {{val.hit}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>추천 {{val.recommend.length}}</span>\\r\\n              </div>\\r\\n            </td>\\r\\n            <td>{{extractDate(val.writedate)}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"contents?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"paging($event)\\\"></mat-paginator>\\r\\n\\r\\n      <div *ngIf=\\\"(type != 'notice' && authService.loggedIn() && user?.clean) || (type == 'notice' && user?.userid == 'admin')\\\" style=\\\"float: right;\\\">\\r\\n        <a mat-raised-button [routerLink]=\\\"['/write/' + type]\\\">글쓰기</a>\\r\\n      </div><br/>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <mat-form-field style=\\\"width: 100px;\\\">\\r\\n          <mat-select value=\\\"title\\\" (selectionChange)=\\\"onSearch(searchSelect.value, searchInput.value)\\\" #searchSelect>\\r\\n            <mat-option value=\\\"title\\\">제목</mat-option>\\r\\n            <mat-option value=\\\"nickname\\\">닉네임</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>&nbsp;&nbsp;\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 200px;\\\">\\r\\n          <mat-label>검색</mat-label>\\r\\n          <input matInput (input)=\\\"onSearch(searchSelect.value, $event.target.value)\\\" #searchInput>\\r\\n          <mat-icon matSuffix>search</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"board\\\" *ngIf=\\\"type != 'free' && type != 'notice'\\\">\\r\\n    <mat-icon class=\\\"more-icon\\\">more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #board>\\r\\n    <button mat-menu-item *ngIf=\\\"type != 'free' && type != 'notice'\\\" [routerLink]=\\\"['/game/' + sub?.gameid]\\\">\\r\\n      <span>게임으로 이동</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>답글 입력</h1>\\r\\n<div mat-dialog-content>\\r\\n  <pre class=\\\"content\\\" [innerHTML]=\\\"data.comment | safe\\\"></pre><br/>\\r\\n  <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n    <mat-label>댓글을 작성해주세요.</mat-label>\\r\\n    <textarea matInput rows=\\\"3\\\" [(ngModel)]=\\\"data.reply\\\" #field\\r\\n      (input)=\\\"onTypingComment(field, $event.target.value)\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onClose()\\\">닫기</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.reply\\\" cdkFocusInitial>확인</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { FuncService } from '../../services/func.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { BoardService } from '../../services/board.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n  svg: number = 0;\r\n\r\n  type: String;\r\n  num: String;\r\n  content: any;\r\n  contents: any[];\r\n  comments: any[];\r\n  cmtWrite = new FormControl();\r\n\r\n  user: any;\r\n  sub: any;\r\n  isMyBookmark: boolean;\r\n  bk: any = undefined;\r\n  \r\n  pagingSize = 25;\r\n  pagingFrom: Number = 0;\r\n  pagingTo: Number = this.pagingSize;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private boardService: BoardService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  extractDate(date) {\r\n    let writeDate = new Date(date);\r\n    let today = new Date();\r\n\r\n    let writeDateDay = writeDate.getDate();\r\n    let todayDate = today.getDate();\r\n\r\n    if ( writeDateDay != todayDate ) {\r\n      return (writeDate.getMonth() + 1) + '/' + writeDateDay;\r\n    } else {\r\n      if ( writeDate.getFullYear() == today.getFullYear() && writeDate.getMonth() == today.getMonth() ) {\r\n        let hour = writeDate.getHours();\r\n        let min = writeDate.getMinutes();\r\n        return (hour >= 10 ? hour : '0' + hour) + ':' + (min >= 10 ? min : '0' + min);\r\n      } else {\r\n        return (writeDate.getMonth() + 1) + '/' + writeDateDay;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  scrollToPost(el: HTMLElement) {\r\n    el.scrollIntoView();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.svg = this.funcService.getRandomSVGBackground();\r\n    this.type = this.route.snapshot.paramMap.get('type');\r\n    this.num = this.route.snapshot.paramMap.get('num');\r\n    this.boardService.checkBoardExists(this.type).subscribe(result => {\r\n      if ( result.exist ) {\r\n        this.boardService.getSub(this.type).subscribe(data => {\r\n          this.sub = data.sub;\r\n          this.boardService.takeAllPosts(this.type).subscribe(data => {\r\n            this.contents = data.posts;\r\n            if ( this.num != 'list' ) {\r\n              this.boardService.takeOnePost(this.num).subscribe(result => {\r\n                if ( result.fail ) {\r\n                  this.router.navigate(['/no-page']);\r\n                  return false;\r\n                }\r\n                this.content = result.post;\r\n                this.setCommentsArray(this.content.comment);\r\n\r\n                if ( this.type == 'free' ) {\r\n                  this.funcService.setTitle(this.content.title + ' :: 자유게시판');\r\n                } else if ( this.type == 'notice' ) {\r\n                  this.funcService.setTitle(this.content.title + ' :: 공지게시판');\r\n                } else {\r\n                  this.funcService.setTitle(this.content.title + ' :: ' + this.sub.title + ' 게시판');\r\n                }\r\n                if ( this.authService.loggedIn() ) {\r\n                  this.authService.getProfile().subscribe(profile => {\r\n                    this.user = profile.user;\r\n                  });\r\n                }\r\n              });\r\n            } else {\r\n              if ( this.type == 'free' ) {\r\n                this.funcService.setTitle('자유게시판');\r\n              } else if ( this.type == 'notice' ) {\r\n                this.funcService.setTitle('공지게시판');\r\n              } else {\r\n                this.funcService.setTitle(this.sub.title + ' 게시판');\r\n              }\r\n              if ( this.authService.loggedIn() ) {\r\n                this.authService.getProfile().subscribe(profile => {\r\n                  this.user = profile.user;\r\n                  this.isMyBookmark = false;\r\n                  for (let bookmark of this.user.bookmark) {\r\n                    if ( bookmark.url == this.type ) {\r\n                      this.isMyBookmark = true;\r\n                      this.bk = bookmark;\r\n                      break;\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        this.router.navigate(['/no-page']);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  countComments(comments): number {\r\n    let count = 0;\r\n    for (let comment of comments) {\r\n      if ( comment.reply ) count += comment.reply.length;\r\n      count++;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  private setCommentsArray(comments) {\r\n    this.comments = [];\r\n    for (let comment of comments) {\r\n      if ( comment.reply ) {\r\n        for (let reply of comment.reply) {\r\n          this.pushToCommentsArray(reply);\r\n        }\r\n      }\r\n      this.pushToCommentsArray(comment);\r\n    }\r\n  }\r\n\r\n  private pushToCommentsArray(item) {\r\n    for (let exist of this.comments) {\r\n      if ( exist.userid == item.userid ) {\r\n        return;\r\n      }\r\n    }\r\n    this.comments.push({\r\n      userid: item.userid,\r\n      nickname: item.nickname\r\n    });\r\n  }\r\n\r\n  onTypingComment(field: HTMLTextAreaElement, text: string) {\r\n    if ( this.comments.length == 0 ) return;\r\n    const len: number = text.length;\r\n    if ( len < 2 ) return;\r\n    if ( text.substring(len - 2) == '[[' ) {\r\n      const dialogRef = this.dialog.open(CommentDialog, {\r\n        width: '300px',\r\n        data: {\r\n          title: this.content.title,\r\n          comment: this.comments,\r\n          user: undefined\r\n        }\r\n      });\r\n      dialogRef.afterClosed().subscribe(data => {\r\n        if ( !data ) return;\r\n        field.value += data.userid + ']]';\r\n      });\r\n    }\r\n  }\r\n\r\n  onWriteComment(field: HTMLTextAreaElement) {\r\n    const formData = {\r\n      comment: this.cmtWrite.value,\r\n      _id: this.num,\r\n      comments: this.comments\r\n    };\r\n    this.boardService.writeComment(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        field.value = '';\r\n        this.router.navigate(['/board/' + this.type + '/' + this.num]);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['댓글 작성 오류'], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onReplyComment(comment) {\r\n    if ( !this.authService.loggedIn() ) return;\r\n    const dialogRef = this.dialog.open(ReplyDialog, {\r\n      width: '300px',\r\n      data: {\r\n        title: this.content.title,\r\n        comments: this.comments,\r\n        comment: comment.comment,\r\n        reply: undefined\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      if ( !data ) return;\r\n      const formData = {\r\n        postNum: this.num,\r\n        cmtNum: comment.num,\r\n        comments: this.comments,\r\n        comment: data\r\n      }\r\n      this.boardService.replyComment(formData).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/board/' + this.type + '/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['답글 작성 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onRemovePost() {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.boardService.removePost(this.num).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/board/' + this.type + '/list']);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onRemoveComment(cmtNum) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.boardService.removeComment(this.num, cmtNum).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/board/' + this.type + '/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onRemoveReply(cmtNum, reply) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.boardService.removeReply(this.num, cmtNum, reply).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/board/' + this.type + '/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onRecommend() {\r\n    if ( !this.authService.loggedIn() ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['로그인 후 이용하실 수 있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n    } else {\r\n      this.boardService.recommend(this.num).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/board/' + this.type + '/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  bookmark() {\r\n    this.boardService.bookmark(this.type).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.isMyBookmark = true;\r\n        this.bk = result.bookmark;\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  unbookmark() {\r\n    this.boardService.removeBookmark(this.bk).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.isMyBookmark = false;\r\n        this.bk = undefined;\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch(category, text) {\r\n    if ( text == '' ) {\r\n      this.boardService.takeAllPosts(this.type).subscribe(data => {\r\n        this.contents = data.posts;\r\n      });\r\n    } else {\r\n      this.boardService.takeSearchedPosts(category, this.type, text).subscribe(data => {\r\n        this.contents = data.posts;\r\n      });\r\n    }\r\n  }\r\n\r\n  paging(pageEvent: PageEvent) {\r\n    this.pagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.pagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/board/' + this.type + '/' + this.num]);\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  title: string,\r\n  comment: Array<any>,\r\n  user: any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-board-dialog',\r\n  templateUrl: './board.component.dialog.html'\r\n})\r\nexport class CommentDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CommentDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) { }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\nexport interface ReplyData {\r\n  title: string,\r\n  comments: Array<any>,\r\n  comment: string,\r\n  reply: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-board-reply',\r\n  templateUrl: './board.component.reply.html'\r\n})\r\nexport class ReplyDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ReplyDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ReplyData,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  onTypingComment(field: HTMLTextAreaElement, text: string) {\r\n    if ( this.data.comments.length == 0 ) return;\r\n    const len: number = text.length;\r\n    if ( len < 2 ) return;\r\n    if ( text.substring(len - 2) == '[[' ) {\r\n      const dialogRef = this.dialog.open(CommentDialog, {\r\n        width: '300px',\r\n        data: {\r\n          title: this.data.title,\r\n          comment: this.data.comments,\r\n          user: undefined\r\n        }\r\n      });\r\n      dialogRef.afterClosed().subscribe(data => {\r\n        if ( !data ) return;\r\n        field.value += data.userid + ']]';\r\n      });\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29ydmVlL2NvcnZlZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- element for representing the location of the post to be scrolled -->\\r\\n<span style=\\\"display: hidden;\\\" #postLocation></span>\\r\\n\\r\\n<!-- section for a post -->\\r\\n<section *ngIf=\\\"num != 'list'\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">{{content?.title}}</h4>\\r\\n\\r\\n      <span style=\\\"float: right; text-align: right; font-size: 80%;\\\">\\r\\n        <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(content?.userid)\\\">{{content?.nickname}}</span><br/>{{content?.writedate}}\\r\\n      </span>\\r\\n      <hr/>\\r\\n\\r\\n      <div style=\\\"width: 100%;\\\" [innerHTML]=\\\"iframe | safe\\\"></div>\\r\\n\\r\\n      <br/><br/><br/><br/>\\r\\n      <div class=\\\"posting content\\\" [innerHtml]=\\\"content?.content | safe\\\"></div>\\r\\n      <br/><br/><br/><br/>\\r\\n\\r\\n      <div class=\\\"original-section\\\">\\r\\n        <p>{{writerIntro}}</p>\\r\\n        <p *ngIf=\\\"content?.block?.from\\\">\\r\\n          이 게임은 <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(content?.block?.from?.userid)\\\">{{content?.block?.from?.nickname}}</span> 님의 <a class=\\\"original-from-title\\\" [routerLink]=\\\"['/game/' + content?.block?.from?.game]\\\">{{content?.block?.from?.title}}</a> 으로부터 참조되었습니다.\\r\\n        </p>\\r\\n        <p *ngIf=\\\"content?.block?.added?.length > 0\\\">\\r\\n          덧붙여진 게임 :<span *ngFor=\\\"let added of content?.block?.added\\\"><a class=\\\"original-added-title\\\" [routerLink]=\\\"['/game/' + added?.game]\\\"> {{added?.title}}</a> (<span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(added?.userid)\\\">{{added?.nickname}}</span>)</span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"content?.block?.coworker?.length > 0\\\">\\r\\n          공동제작자 :<span *ngFor=\\\"let coworker of content?.block?.coworker\\\" class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(coworker?.userid)\\\"> {{coworker?.nickname}}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <br/><br/>\\r\\n\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onRecommend()\\\">\\r\\n          추천 {{content?.recommend?.length}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <br/><hr/>\\r\\n\\r\\n      <!-- ############### table for comments ############### -->\\r\\n      <table class=\\\"cmtTable\\\">\\r\\n        <tbody *ngFor=\\\"let comment of content?.comment\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 90px;\\\">\\r\\n              <img [attr.src]=\\\"'images/profile/' + comment.userid\\\" class=\\\"profileImage\\\" (click)=\\\"onReplyComment(comment)\\\" />\\r\\n            </td>\\r\\n            <td>\\r\\n              <span style=\\\"font-size: 80%;\\\">\\r\\n                <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(comment?.userid)\\\">\\r\\n                  {{comment?.nickname}}</span> &nbsp;|&nbsp; {{comment?.writedate}}\\r\\n                <span *ngIf=\\\"comment?.userid == user?.userid || user?.userid == 'admin'\\\"> &nbsp;|&nbsp; \\r\\n                  <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemoveComment(comment.num)\\\">삭제</span>\\r\\n                </span>\\r\\n              </span>\\r\\n              <pre class=\\\"content writerText\\\" *ngIf=\\\"comment?.userid == content?.userid\\\" [innerHTML]=\\\"comment?.comment | safe\\\"></pre>\\r\\n              <pre class=\\\"content\\\" *ngIf=\\\"comment?.userid != content?.userid\\\" [innerHTML]=\\\"comment?.comment | safe\\\"></pre>\\r\\n              <br/>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"authService.loggedIn() && content?.userid == user?.userid && content?.userid != comment?.userid && sendable(comment?.userid)\\\" style=\\\"width: 20%;\\\">\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"sendRequest(comment?.userid)\\\" style=\\\"float: right;\\\">작업요청 보내기</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"comment?.reply?.length > 0\\\">\\r\\n            <td colspan=\\\"2\\\">\\r\\n              <table class=\\\"rplyTable\\\">\\r\\n                <tr *ngFor=\\\"let reply of comment?.reply\\\">\\r\\n                  <td class=\\\"rply-blank\\\"></td>\\r\\n                  <td style=\\\"width: 90px;\\\">\\r\\n                    <img [attr.src]=\\\"'images/profile/' + comment.userid\\\" class=\\\"profileImage\\\" />\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <span style=\\\"font-size: 80%;\\\">\\r\\n                      <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(reply?.userid)\\\">\\r\\n                        {{reply?.nickname}}</span> &nbsp;|&nbsp; {{reply?.writedate}}\\r\\n                      <span *ngIf=\\\"reply?.userid == user?.userid || user?.userid == 'admin'\\\"> &nbsp;|&nbsp; \\r\\n                        <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemoveReply(comment?.num, reply)\\\">삭제</span>\\r\\n                      </span>\\r\\n                    </span>\\r\\n                    <pre class=\\\"content writerText\\\" *ngIf=\\\"reply?.userid == content?.userid\\\" [innerHTML]=\\\"reply?.comment | safe\\\"></pre>\\r\\n                    <pre class=\\\"content\\\" *ngIf=\\\"reply?.userid != content?.userid\\\" [innerHTML]=\\\"reply?.comment | safe\\\"></pre>\\r\\n                    <br/>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n      <!-- ############### table for comments ############### -->\\r\\n\\r\\n      <!-- ############### writing area ############### -->\\r\\n      <form *ngIf=\\\"authService.loggedIn() && user?.clean\\\" (submit)=\\\"onWriteComment(field)\\\"><hr *ngIf=\\\"content?.comment?.length > 0\\\" />\\r\\n        <table style=\\\"width: 96%; margin: auto;\\\">\\r\\n          <tr style=\\\"text-align: center;\\\">\\r\\n\\r\\n            <td rowspan=\\\"2\\\" style=\\\"width: 85%;\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%; height: 100%;\\\">\\r\\n                <mat-label>댓글을 작성해주세요.</mat-label>\\r\\n                <textarea matInput rows=\\\"3\\\" name=\\\"cmtWrite\\\"\\r\\n                  [formControl]=\\\"cmtWrite\\\" #field\\r\\n                  (input)=\\\"onTypingComment(field, $event.target.value)\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"text-align: center; padding-bottom: 3%;\\\">\\r\\n              <button mat-raised-button type=\\\"submit\\\" style=\\\"width: 60%;\\\">작성</button>\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n        </table>\\r\\n      </form>\\r\\n      <!-- ############### writing area ############### -->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"aboutPost\\\">\\r\\n    <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #aboutPost>\\r\\n    <button mat-menu-item *ngIf=\\\"content?.userid == user?.userid || user?.userid == 'admin'\\\" (click)=\\\"onRemovePost()\\\">\\r\\n      <span>삭제</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</section>\\r\\n\\r\\n<!-- section for a board -->\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n\\r\\n    <div [class]=\\\"'mdl-card__title bg-svg-' + svg\\\" style=\\\"width: 100%; height: 10rem;\\\">\\r\\n      <h2 class=\\\"mdl-card__title-text\\\" style=\\\"color: white;\\\">블록게시판</h2>\\r\\n    </div>\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      \\r\\n      <!-- for large display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--large-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">날짜</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th>글쓴이</th>\\r\\n            <th>조회수</th>\\r\\n            <th>추천</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of contents | slice:pagingFrom:pagingTo; let i=index\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{extractDate(val.writedate)}}</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a [routerLink]=\\\"['/corvee/' + val?._id]\\\"\\r\\n                style=\\\"color: black; text-decoration: none; font-weight: 400;\\\"\\r\\n                (click)=\\\"scrollToPost(postLocation)\\\">{{val.title}}</a>&nbsp;\\r\\n              <span *ngIf=\\\"val.comment.length > 0\\\" style=\\\"font-size: 85%; color: grey;\\\">[{{countComments(val.comment)}}]</span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(val?.userid)\\\">{{val.nickname}}</span>\\r\\n            </td>\\r\\n            <td>{{val.hit}}</td>\\r\\n            <td>{{val.recommend.length}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <!-- for small display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--small-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of contents | slice:pagingFrom:pagingTo; let i=index\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\"\\r\\n              [routerLink]=\\\"['/corvee/' + val?._id]\\\" (click)=\\\"scrollToPost(postLocation)\\\">\\r\\n              <div>\\r\\n                {{val.title}}\\r\\n                <span *ngIf=\\\"val.comment.length > 0\\\" style=\\\"color: grey;\\\">[{{countComments(val.comment)}}]</span>\\r\\n              </div>\\r\\n              <div style=\\\"font-size: 85%; margin-top: 1%;\\\">\\r\\n                <span>{{val.nickname}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>조회 {{val.hit}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>추천 {{val.recommend.length}}</span>\\r\\n              </div>\\r\\n            </td>\\r\\n            <td>{{extractDate(val.writedate)}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"contents?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"paging($event)\\\"></mat-paginator>\\r\\n\\r\\n      <div *ngIf=\\\"authService.loggedIn() && user?.clean\\\" style=\\\"float: right;\\\">\\r\\n        <a mat-raised-button [routerLink]=\\\"['/cwrite']\\\">작성</a>\\r\\n      </div><br/>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <mat-form-field style=\\\"width: 100px;\\\">\\r\\n          <mat-select value=\\\"title\\\" (selectionChange)=\\\"onSearch(searchSelect.value, searchInput.value)\\\" #searchSelect>\\r\\n            <mat-option value=\\\"title\\\">제목</mat-option>\\r\\n            <mat-option value=\\\"nickname\\\">닉네임</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>&nbsp;&nbsp;\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 200px;\\\">\\r\\n          <mat-label>검색</mat-label>\\r\\n          <input matInput (input)=\\\"onSearch(searchSelect.value, $event.target.value)\\\" #searchInput>\\r\\n          <mat-icon matSuffix>search</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { CommentDialog, ReplyDialog } from '../board/board.component';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { CorveeService } from '../../services/corvee.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-corvee',\r\n  templateUrl: './corvee.component.html',\r\n  styleUrls: ['./corvee.component.css']\r\n})\r\nexport class CorveeComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n  svg: number = 0;\r\n\r\n  num: String;\r\n  content: any;\r\n  contents: any[];\r\n  comments: any[];\r\n  cmtWrite = new FormControl();\r\n\r\n  user: any;\r\n  coworkers: Array<any> = undefined;\r\n  requesteds: Array<any> = undefined;\r\n  writerIntro: string;\r\n  iframe: string;\r\n  \r\n  pagingSize = 25;\r\n  pagingFrom: Number = 0;\r\n  pagingTo: Number = this.pagingSize;\r\n\r\n  ct: any = null;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private corveeService: CorveeService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.svg = this.funcService.getRandomSVGBackground();\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  extractDate(date) {\r\n    let writeDate = new Date(date);\r\n    let today = new Date();\r\n\r\n    let writeDateDay = writeDate.getDate();\r\n    let todayDate = today.getDate();\r\n\r\n    if ( writeDateDay != todayDate ) {\r\n      return (writeDate.getMonth() + 1) + '/' + writeDateDay;\r\n    } else {\r\n      if ( writeDate.getFullYear() == today.getFullYear() && writeDate.getMonth() == today.getMonth() ) {\r\n        let hour = writeDate.getHours();\r\n        let min = writeDate.getMinutes();\r\n        return (hour >= 10 ? hour : '0' + hour) + ':' + (min >= 10 ? min : '0' + min);\r\n      } else {\r\n        return (writeDate.getMonth() + 1) + '/' + writeDateDay;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  scrollToPost(el: HTMLElement) {\r\n    el.scrollIntoView();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.num = this.route.snapshot.paramMap.get('num');\r\n    this.corveeService.takeAllPosts().subscribe(data => {\r\n      this.contents = data.posts;\r\n      if ( this.num != 'list' ) {\r\n        this.corveeService.takeOnePost(this.num).subscribe(result => {\r\n          if ( result.fail ) {\r\n            this.router.navigate(['/no-page']);\r\n            return false;\r\n          }\r\n          this.content = result.post;\r\n          this.setCommentsArray(this.content.comment);\r\n          this.coworkers = result.coworkers;\r\n          this.requesteds = result.requesteds;\r\n          this.writerIntro = result.introduction;\r\n          this.iframe = '<iframe src=\"'\r\n            + this.funcService.ServerAddress\r\n            + '/corvees/frame?_id='\r\n            + this.content._id\r\n            + '\" style=\"width: 100%; height: 500px;\">loading...</iframe>';\r\n          this.funcService.setTitle(this.content.title + ' :: 블록게시판');\r\n          if ( this.authService.loggedIn() ) {\r\n            this.authService.getProfile().subscribe(profile => {\r\n              this.user = profile.user;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.funcService.setTitle('블록게시판');\r\n        if ( this.authService.loggedIn() ) {\r\n          this.authService.getProfile().subscribe(profile => {\r\n            this.user = profile.user;\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  countComments(comments): number {\r\n    let count = 0;\r\n    for (let comment of comments) {\r\n      if ( comment.reply ) count += comment.reply.length;\r\n      count++;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  private setCommentsArray(comments) {\r\n    this.comments = [];\r\n    for (let comment of comments) {\r\n      if ( comment.reply ) {\r\n        for (let reply of comment.reply) {\r\n          this.pushToCommentsArray(reply);\r\n        }\r\n      }\r\n      this.pushToCommentsArray(comment);\r\n    }\r\n  }\r\n\r\n  private pushToCommentsArray(item) {\r\n    for (let exist of this.comments) {\r\n      if ( exist.userid == item.userid ) {\r\n        return;\r\n      }\r\n    }\r\n    this.comments.push({\r\n      userid: item.userid,\r\n      nickname: item.nickname\r\n    });\r\n  }\r\n\r\n  onTypingComment(field: HTMLTextAreaElement, text: string) {\r\n    if ( this.comments.length == 0 ) return;\r\n    const len: number = text.length;\r\n    if ( len < 2 ) return;\r\n    if ( text.substring(len - 2) == '[[' ) {\r\n      const dialogRef = this.dialog.open(CommentDialog, {\r\n        width: '300px',\r\n        data: {\r\n          title: this.content.title,\r\n          comment: this.comments,\r\n          user: undefined\r\n        }\r\n      });\r\n      dialogRef.afterClosed().subscribe(data => {\r\n        if ( !data ) return;\r\n        field.value += data.userid + ']]';\r\n      });\r\n    }\r\n  }\r\n\r\n  onWriteComment(field: HTMLTextAreaElement) {\r\n    const formData = {\r\n      comment: this.cmtWrite.value,\r\n      _id: this.num,\r\n      comments: this.comments\r\n    };\r\n    this.corveeService.writeComment(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        field.value = '';\r\n        this.router.navigate(['/corvee/' + this.num]);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['댓글 작성 오류'], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onReplyComment(comment) {\r\n    if ( !this.authService.loggedIn() ) return;\r\n    const dialogRef = this.dialog.open(ReplyDialog, {\r\n      width: '300px',\r\n      data: {\r\n        title: this.content.title,\r\n        comments: this.comments,\r\n        comment: comment.comment,\r\n        reply: undefined\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      if ( !data ) return;\r\n      const formData = {\r\n        postNum: this.num,\r\n        cmtNum: comment.num,\r\n        comments: this.comments,\r\n        comment: data\r\n      }\r\n      this.corveeService.replyComment(formData).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/corvee/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['답글 작성 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  onRemovePost() {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.corveeService.removePost(this.num).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/corvee/list']);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onRemoveComment(cmtNum) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.corveeService.removeComment(this.num, cmtNum).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/corvee/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onRemoveReply(cmtNum, reply) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.corveeService.removeReply(this.num, cmtNum, reply).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/corvee/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onRecommend() {\r\n    if ( !this.authService.loggedIn() ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['로그인 후 이용하실 수 있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n    } else {\r\n      this.corveeService.recommend(this.num).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/corvee/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  sendable(userid): boolean {\r\n    if ( this.coworkers ) {\r\n      for (let coworker of this.coworkers) {\r\n        if ( coworker.userid == userid ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if ( this.requesteds ) {\r\n      for(let requested of this.requesteds) {\r\n        if ( requested.userid == userid ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sendRequest(userid) {\r\n    if ( !confirm('요청을 보내시겠습니까?') ) return;\r\n    this.authService.getIdFromUserid(userid).subscribe(data => {\r\n      this.authService.sendRequest(data._id, this.content.title, this.content.temp).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['요청되었습니다.'], \r\n            type: 'success', \r\n            timeout: 2000\r\n          });\r\n          this.router.navigate(['/corvee/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch(category, text) {\r\n    if ( text == '' ) {\r\n      this.corveeService.takeAllPosts().subscribe(data => {\r\n        this.contents = data.posts;\r\n      });\r\n    } else {\r\n      this.corveeService.takeSearchedPosts(category, text).subscribe(data => {\r\n        this.contents = data.posts;\r\n      });\r\n    }\r\n  }\r\n\r\n  paging(pageEvent: PageEvent) {\r\n    this.pagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.pagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/corvee/' + this.num]);\r\n  }\r\n\r\n}\r\n","module.exports = \".temp-tree {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jd3JpdGUvY3dyaXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3dyaXRlL2N3cml0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRlbXAtdHJlZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn0iXX0= */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      \\r\\n      <div class=\\\"temp-tree\\\" *ngFor=\\\"let temp of temps\\\">\\r\\n        <button mat-icon-button (click)=\\\"open(temp)\\\">\\r\\n          <mat-icon *ngIf=\\\"!temp?.opened\\\">keyboard_arrow_right</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"temp?.opened\\\">keyboard_arrow_down</mat-icon>\\r\\n        </button>\\r\\n        {{temp?.title}} ({{temp?.savedate}})\\r\\n        <div *ngIf=\\\"temp?.opened\\\" style=\\\"padding: 20px;\\\">\\r\\n          <mat-accordion>\\r\\n            <mat-expansion-panel style=\\\"width: 95%; margin: auto;\\\" *ngFor=\\\"let block of temp?.history\\\">\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>\\r\\n                  {{block?.savedate}}\\r\\n                </mat-panel-title>\\r\\n                <mat-panel-description>\\r\\n                  {{block?.moves}}개의 행동 추가됨\\r\\n                </mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n    \\r\\n              <p>\\r\\n                <b class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(coworkerMap?.get(block?.saveby)?.userid)\\\">{{coworkerMap?.get(block?.saveby)?.nickname}}</b> 님에 의해 수정됨.\\r\\n              </p>\\r\\n              <button mat-button (click)=\\\"viewBlock(temp?._id, block?.num)\\\">블록 보기</button>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"selectBlock(temp?._id, block?.num)\\\">선택</button>\\r\\n            </mat-expansion-panel>\\r\\n            \\r\\n          </mat-accordion>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>글쓰기</h4><hr/>\\r\\n      <div style=\\\"width: 98%; margin: auto;\\\">\\r\\n        <form (submit)=\\\"onWritePost()\\\">\\r\\n          <mat-form-field style=\\\"width: 100%;\\\">\\r\\n            <input matInput placeholder=\\\"제목\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\">\\r\\n          </mat-form-field>\\r\\n          <textarea [froalaEditor]=\\\"options\\\" [(ngModel)]=\\\"content\\\" name=\\\"content\\\"></textarea>\\r\\n          <br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" style=\\\"float: right;\\\">작성</button>\\r\\n        </form><br/>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { FuncService } from '../../services/func.service';\r\nimport { CorveeService } from '../../services/corvee.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\ninterface Selected {\r\n  _id: string,\r\n  idx: number\r\n}\r\n\r\n@Component({\r\n  selector: 'app-cwrite',\r\n  templateUrl: './cwrite.component.html',\r\n  styleUrls: ['./cwrite.component.css']\r\n})\r\nexport class CwriteComponent implements OnInit {\r\n  options: any = {\r\n    placeholderText: '',\r\n    height: 500,\r\n    imageDefaultAlign: 'left',\r\n    imageDefaultWidth: 0,\r\n\r\n    charCounterCount: true,\r\n    imageUploadParam: 'image',\r\n    imageUploadURL: '/corvees/images',\r\n    imageUploadMethod: 'POST',\r\n    imageMaxSize: 5 * 1024 * 1024,  // maximun size : 5MB\r\n    imageAllowTypes: [ 'jpeg', 'jpg', 'png', 'gif', 'webp' ],\r\n\r\n    toolbarButtonsXS: [\r\n      'insertImage', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript'\r\n    ]\r\n  };\r\n\r\n  title: string;\r\n  content: string;\r\n  temps: Array<any>;\r\n  selectedItem: Selected = undefined;\r\n\r\n  user: any;\r\n  coworkerMap: Map<string, any>;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private flashMessage: NgFlashMessageService,\r\n    private router: Router,\r\n    private corveeService: CorveeService,\r\n  ) {\r\n    this.funcService.setTitle('블록게시판 작성');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.corveeService.takeMyTemps().subscribe(data => {\r\n      if ( !data.temps || data.temps.length == 0 ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['작업목록이 없습니다.'], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n        this.router.navigate([this.funcService.getPreviousUrl()]);\r\n      } else {\r\n        this.temps = data.temps;\r\n        this.user = data.user;\r\n        if ( !this.user.clean ) {\r\n          this.router.navigate(['/no-page']);\r\n          return false;\r\n        }\r\n        this.coworkerMap = new Map<string, any>();\r\n        this.coworkerMap.set(this.user._id, {_id: this.user._id, userid: this.user.userid, nickname: this.user.nickname});\r\n        for(let temp of this.temps) {\r\n          temp.opened = false;\r\n          temp.history = [];\r\n          for (let i=0; i<temp.block.length; i++) {\r\n            let block = temp.block[i];\r\n            if ( block.saveby ) {\r\n              block.num = i + 1;\r\n              temp.history.push(block);\r\n            }\r\n          }\r\n          temp.history.reverse();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  open(temp) {\r\n    this.corveeService.takeTempUsers(temp.coworker).subscribe(data => {\r\n      for (let user of data.users) {\r\n        if ( !this.coworkerMap.get(user._id) ) {\r\n          this.coworkerMap.set(user._id, user);\r\n        }\r\n      }\r\n      temp.opened = !temp.opened;\r\n    });\r\n  }\r\n\r\n  viewBlock(num, i) {\r\n    this.funcService.popUp(this.funcService.ServerAddress + '/modals/view-temp-block?game=' + num + '&recent=' + i, 1000, 600);\r\n  }\r\n\r\n  selectBlock(num, i) {\r\n    this.selectedItem = {\r\n      _id: num,\r\n      idx: i\r\n    };\r\n    this.flashMessage.showFlashMessage({\r\n      messages: ['선택되었습니다.'], \r\n      type: 'success', \r\n      timeout: 2000\r\n    });\r\n  }\r\n\r\n  onWritePost() {\r\n    if ( this.title == '' || this.title == undefined ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['제목이 비어있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    } else if ( this.content == '' || this.content == undefined ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['내용이 비어있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    } else if ( !this.selectedItem ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['블록이 선택되지 않았습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    } else {\r\n      const formData = {\r\n        title: this.title,\r\n        content: this.content,\r\n        item: this.selectedItem\r\n      };\r\n      this.corveeService.writePost(formData).subscribe(data => {\r\n        if ( data.success ) {\r\n          this.router.navigate(['/corvee/' + data.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['글 작성 실패'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".recommends {\\r\\n    margin: auto;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.recommends td {\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9nYW1lL2dhbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9nYW1lL2dhbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWNvbW1lbmRzIHtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnJlY29tbWVuZHMgdGQge1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\r\\n<div mat-dialog-content>\\r\\n  아래 내용을 복사해주세요.<br/>\\r\\n  <mat-form-field style=\\\"width: 100%;\\\">\\r\\n    <textarea matInput [(ngModel)]=\\\"data.text\\\" rows=\\\"5\\\" readonly #copy (click)=\\\"copyText(copy)\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onClose()\\\">닫기</button>\\r\\n</div>\\r\\n\"","module.exports = \"<!-- element for representing the location of the post to be scrolled -->\\r\\n<span style=\\\"display: hidden;\\\" #postLocation></span>\\r\\n\\r\\n<!-- section for a post -->\\r\\n<section *ngIf=\\\"num != 'list'\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">{{content?.title}}</h4>\\r\\n      <span style=\\\"float: right; text-align: right; font-size: 80%;\\\">\\r\\n        <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(content?.userid)\\\">{{content?.nickname}}</span><br/>{{content?.writedate}}\\r\\n      </span>\\r\\n      <hr/>\\r\\n\\r\\n      <!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ ENGINE (GAME) ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->\\r\\n      <div class=\\\"engine-layout\\\">\\r\\n\\r\\n        <!-- PHASE-CONTENT -->\\r\\n        <div class=\\\"stage-content\\\" [innerHTML]=\\\"playService?.phase?.content | safe\\\"></div>\\r\\n\\r\\n        <!-- CHOICES -->\\r\\n        <table style=\\\"width: 100%;\\\" *ngIf=\\\"!playService.end\\\">\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let choice of playService?.phase?.choice\\\" (click)=\\\"playService.select(choice?.change_set, choice?.stage_to)\\\" style=\\\"height: 50px;\\\">\\r\\n              <td class=\\\"stage-choice btn--stripe\\\">{{choice?.content}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <!-- END -->\\r\\n        <table *ngIf=\\\"playService.end\\\" class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"width: 100%;\\\">\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">THE END.</td>\\r\\n            <td>최종점수 : {{playService?.score}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td colspan=\\\"2\\\"><button mat-button (click)=\\\"playService.replay()\\\" style=\\\"float: right;\\\">다시하기</button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n        <!-- SHOW PARAMETERS -->\\r\\n        <hr/>\\r\\n        <div class=\\\"row align-items-center\\\" *ngFor=\\\"let arr of playService?.paramArr\\\">\\r\\n          <div class=\\\"col-sm grid-cell\\\" *ngFor=\\\"let val of arr\\\">\\r\\n            <span *ngIf=\\\"playService.visible(val?.value?.visible)\\\">\\r\\n              {{val?.key}}<span>: </span>{{val?.value?.value}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ ENGINE (GAME) ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->\\r\\n\\r\\n      <br/><br/><br/><br/>\\r\\n      <div>{{content?.content}}</div>\\r\\n      <br/><br/><br/><br/>\\r\\n\\r\\n      <div class=\\\"original-section\\\">\\r\\n        <p>\\r\\n          version. {{content?.version}}\\r\\n        </p>\\r\\n        <p *ngIf=\\\"content?.highest\\\">\\r\\n          최고 득점자 : <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(content?.highest?.userid)\\\">{{content?.highest?.nickname}}</span> ({{content?.highest?.score}}점)\\r\\n        </p>\\r\\n        <p *ngIf=\\\"content?.from\\\">\\r\\n          이 게임은 <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(content?.from?.userid)\\\">{{content.from.nickname}}</span> 님의 <a class=\\\"original-from-title\\\" [routerLink]=\\\"['/game/' + content?.from?.game]\\\">{{content.from.title}}</a> 으로부터 참조되었습니다.\\r\\n        </p>\\r\\n        <p *ngIf=\\\"content?.added?.length > 0\\\">\\r\\n          덧붙여진 게임 :<span *ngFor=\\\"let added of content?.added\\\"><a class=\\\"original-added-title\\\" [routerLink]=\\\"['/game/' + added?.game]\\\"> {{added?.title}}</a> (<span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(added?.userid)\\\">{{added?.nickname}}</span>)</span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"content?.coworker?.length > 0\\\">\\r\\n          공동제작자 :<span *ngFor=\\\"let coworker of content?.coworker\\\" class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(coworker?.userid)\\\"> {{coworker?.nickname}}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <br/><br/>\\r\\n\\r\\n      <!-- normal user -->\\r\\n      <table class=\\\"recommends\\\" *ngIf=\\\"user?.userid != content?.userid && user?.userid != 'admin'\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onRecommend(true)\\\">\\r\\n              추천 {{content?.recommend}}\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onRecommend(false)\\\">\\r\\n              비추천 {{content?.unrecommend}}\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n\\r\\n      <!-- writer -->\\r\\n      <table class=\\\"recommends\\\" *ngIf=\\\"authService.loggedIn() && user?.userid == content?.userid && user?.userid != 'admin'\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onRecommend(true)\\\">\\r\\n              추천 {{content?.recommend}}\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onRecommend(false)\\\">\\r\\n              비추천 {{content?.unrecommend}}\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button mat-raised-button\\r\\n              *ngIf=\\\"content?.boardRequest == 0 && (content?.recommend - content?.unrecommend) >= 1\\\"\\r\\n              (click)=\\\"requestBoard()\\\">\\r\\n              게시판 생성 요청\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n\\r\\n      <!-- admin -->\\r\\n      <table class=\\\"recommends\\\" *ngIf=\\\"authService.loggedIn() && user?.userid == 'admin'\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onRecommend(true)\\\">\\r\\n              추천 {{content?.recommend}}\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onRecommend(false)\\\">\\r\\n              비추천 {{content?.unrecommend}}\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button mat-raised-button\\r\\n              *ngIf=\\\"content?.boardRequest == 1\\\" (click)=\\\"acceptBoard()\\\">\\r\\n              게시판 생성 요청 수락\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n\\r\\n      <br/><hr/>\\r\\n\\r\\n      <!-- ############### table for comments ############### -->\\r\\n      <table class=\\\"cmtTable\\\">\\r\\n        <tbody *ngFor=\\\"let comment of content?.comment\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 90px;\\\">\\r\\n              <img [attr.src]=\\\"'images/profile/' + comment.userid\\\" class=\\\"profileImage\\\" (click)=\\\"onReplyComment(comment)\\\" />\\r\\n            </td>\\r\\n            <td>\\r\\n              <span style=\\\"font-size: 80%;\\\">\\r\\n                <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(comment?.userid)\\\">\\r\\n                  {{comment?.nickname}}</span> &nbsp;|&nbsp; {{comment?.writedate}}\\r\\n                <span *ngIf=\\\"comment?.userid == user?.userid || user?.userid == 'admin'\\\"> &nbsp;|&nbsp; \\r\\n                  <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemoveComment(comment.num)\\\">삭제</span>\\r\\n                </span>\\r\\n              </span>\\r\\n              <pre class=\\\"content writerText\\\" *ngIf=\\\"comment?.userid == content?.userid\\\" [innerHTML]=\\\"comment?.comment | safe\\\"></pre>\\r\\n              <pre class=\\\"content\\\" *ngIf=\\\"comment?.userid != content?.userid\\\" [innerHTML]=\\\"comment?.comment | safe\\\"></pre>\\r\\n              <br/>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"comment?.reply?.length > 0\\\">\\r\\n            <td colspan=\\\"2\\\">\\r\\n              <table class=\\\"rplyTable\\\">\\r\\n                <tr *ngFor=\\\"let reply of comment?.reply\\\">\\r\\n                  <td class=\\\"rply-blank\\\"></td>\\r\\n                  <td style=\\\"width: 90px;\\\">\\r\\n                    <img [attr.src]=\\\"'images/profile/' + comment.userid\\\" class=\\\"profileImage\\\" />\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <span style=\\\"font-size: 80%;\\\">\\r\\n                      <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(reply?.userid)\\\">\\r\\n                        {{reply?.nickname}}</span> &nbsp;|&nbsp; {{reply?.writedate}}\\r\\n                      <span *ngIf=\\\"reply?.userid == user?.userid || user?.userid == 'admin'\\\"> &nbsp;|&nbsp; \\r\\n                        <span style=\\\"cursor: pointer;\\\" (click)=\\\"onRemoveReply(comment?.num, reply)\\\">삭제</span>\\r\\n                      </span>\\r\\n                    </span>\\r\\n                    <pre class=\\\"content writerText\\\" *ngIf=\\\"reply?.userid == content?.userid\\\" [innerHTML]=\\\"reply?.comment | safe\\\"></pre>\\r\\n                    <pre class=\\\"content\\\" *ngIf=\\\"reply?.userid != content?.userid\\\" [innerHTML]=\\\"reply?.comment | safe\\\"></pre>\\r\\n                    <br/>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n      <!-- ############### table for comments ############### -->\\r\\n\\r\\n      <!-- ############### writing area ############### -->\\r\\n      <form *ngIf=\\\"authService.loggedIn() && user?.clean\\\" (submit)=\\\"onWriteComment(field)\\\"><hr *ngIf=\\\"content?.comment?.length > 0\\\" />\\r\\n        <table style=\\\"width: 96%; margin: auto;\\\">\\r\\n          <tr style=\\\"text-align: center;\\\">\\r\\n\\r\\n            <td rowspan=\\\"2\\\" style=\\\"width: 85%;\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%; height: 100%;\\\">\\r\\n                <mat-label>댓글을 작성해주세요.</mat-label>\\r\\n                <textarea matInput rows=\\\"3\\\" name=\\\"cmtWrite\\\"\\r\\n                  [formControl]=\\\"cmtWrite\\\" #field\\r\\n                  (input)=\\\"onTypingComment(field, $event.target.value)\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"text-align: center; padding-bottom: 3%;\\\">\\r\\n              <button mat-raised-button type=\\\"submit\\\" style=\\\"width: 60%;\\\">작성</button>\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n        </table>\\r\\n      </form>\\r\\n      <!-- ############### writing area ############### -->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"aboutPost\\\">\\r\\n    <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #aboutPost>\\r\\n    <button mat-menu-item (click)=\\\"scrapDialog()\\\">\\r\\n      <span>퍼가기</span>\\r\\n    </button>\\r\\n    <button mat-menu-item *ngIf=\\\"content?.board && content?.board != ''\\\" [routerLink]=\\\"['/board/' + content?.board + '/list']\\\">\\r\\n      <span>게시판으로 이동</span>\\r\\n    </button>\\r\\n    <button mat-menu-item (click)=\\\"viewBlock()\\\">\\r\\n      <span>블록 보기</span>\\r\\n    </button>\\r\\n    <button mat-menu-item *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"toMyTempList()\\\">\\r\\n      <span>내 임시저장으로 복사</span>\\r\\n    </button>\\r\\n    <button mat-menu-item *ngIf=\\\"content?.userid == user?.userid || user?.userid == 'admin'\\\" (click)=\\\"onRemovePost()\\\">\\r\\n      <span>삭제</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</section>\\r\\n\\r\\n<!-- section for a board -->\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n\\r\\n    <div [class]=\\\"'mdl-card__title bg-svg-' + svg\\\" style=\\\"width: 100%; height: 10rem;\\\">\\r\\n      <h2 class=\\\"mdl-card__title-text\\\" style=\\\"color: white;\\\">게임게시판</h2>\\r\\n    </div>\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      \\r\\n      <!-- for large display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--large-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">날짜</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th>글쓴이</th>\\r\\n            <th>조회수</th>\\r\\n            <th>추천</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of contents | slice:pagingFrom:pagingTo; let i=index\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{extractDate(val.writedate)}}</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a [routerLink]=\\\"['/game/' + val?._id]\\\"\\r\\n                style=\\\"color: black; text-decoration: none; font-weight: 400;\\\"\\r\\n                (click)=\\\"scrollToPost(postLocation)\\\">{{val.title}}</a>&nbsp;\\r\\n              <span *ngIf=\\\"val.comment.length > 0\\\" style=\\\"font-size: 85%; color: grey;\\\">[{{countComments(val.comment)}}]</span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(val?.userid)\\\">{{val.nickname}}</span>\\r\\n            </td>\\r\\n            <td>{{val.hit}}</td>\\r\\n            <td>{{val.recommend}}<span>/</span>{{val.unrecommend}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <!-- for small display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--small-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of contents | slice:pagingFrom:pagingTo; let i=index\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\"\\r\\n              [routerLink]=\\\"['/game/' + val?._id]\\\" (click)=\\\"scrollToPost(postLocation)\\\">\\r\\n              <div>\\r\\n                {{val.title}}\\r\\n                <span *ngIf=\\\"val.comment.length > 0\\\" style=\\\"color: grey;\\\">[{{countComments(val.comment)}}]</span>\\r\\n              </div>\\r\\n              <div style=\\\"font-size: 85%; margin-top: 1%;\\\">\\r\\n                <span>{{val.nickname}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>조회 {{val.hit}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>추천 {{val.recommend}}<span>/</span>{{val.unrecommend}}</span>\\r\\n              </div>\\r\\n            </td>\\r\\n            <td>{{extractDate(val.writedate)}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"contents?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"paging($event)\\\"></mat-paginator>\\r\\n\\r\\n      <div *ngIf=\\\"authService.loggedIn() && user?.clean\\\" style=\\\"float: right;\\\">\\r\\n        <a mat-raised-button [routerLink]=\\\"['/tool']\\\">작성</a>\\r\\n      </div><br/>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <mat-form-field style=\\\"width: 100px;\\\">\\r\\n          <mat-select value=\\\"title\\\" (selectionChange)=\\\"onSearch(searchSelect.value, searchInput.value)\\\" #searchSelect>\\r\\n            <mat-option value=\\\"title\\\">제목</mat-option>\\r\\n            <mat-option value=\\\"nickname\\\">닉네임</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>&nbsp;&nbsp;\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 200px;\\\">\\r\\n          <mat-label>검색</mat-label>\\r\\n          <input matInput (input)=\\\"onSearch(searchSelect.value, $event.target.value)\\\" #searchInput>\\r\\n          <mat-icon matSuffix>search</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { FuncService } from '../../services/func.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { GameService } from '../../services/game.service';\r\nimport { PlayService } from '../../services/play.service';\r\nimport { TempDialog } from '../temp/temp.component';\r\nimport { CommentDialog, ReplyDialog } from '../board/board.component';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n  svg: number = 0;\r\n\r\n  num: string = '';\r\n  content: any;\r\n  contents: any[];\r\n  comments: any[];\r\n  cmtWrite = new FormControl();\r\n  user: any;\r\n\r\n  pagingSize = 25;\r\n  pagingFrom: Number = 0;\r\n  pagingTo: Number = this.pagingSize;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private gameService: GameService,\r\n    private playService: PlayService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.svg = this.funcService.getRandomSVGBackground();\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const b: boolean = this.num != this.route.snapshot.paramMap.get('num'); // first or another post\r\n    if ( b ) this.num = this.route.snapshot.paramMap.get('num');\r\n\r\n    this.gameService.takeAllPosts().subscribe(data => {\r\n      this.contents = data.posts;\r\n      if ( this.num != 'list' ) {\r\n        this.gameService.takeOnePost(this.num).subscribe(result => {\r\n          if ( result.fail ) {\r\n            this.router.navigate(['/no-page']);\r\n            return false;\r\n          }\r\n          this.content = result.post;\r\n          this.setCommentsArray(this.content.comment);\r\n          if ( b ) {\r\n            this.funcService.setTitle(this.content.title + ' :: 게임게시판');\r\n            this.playService.gameSet(this.content.game);\r\n            this.playService.numSet(this.num);\r\n          }\r\n          if ( this.authService.loggedIn() ) {\r\n            this.authService.getProfile().subscribe(profile => {\r\n              this.user = profile.user;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.funcService.setTitle('게임 게시판');\r\n        if ( this.authService.loggedIn() ) {\r\n          this.authService.getProfile().subscribe(profile => {\r\n            this.user = profile.user;\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  countComments(comments): number {\r\n    let count = 0;\r\n    for (let comment of comments) {\r\n      if ( comment.reply ) count += comment.reply.length;\r\n      count++;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  private setCommentsArray(comments) {\r\n    this.comments = [];\r\n    for (let comment of comments) {\r\n      if ( comment.reply ) {\r\n        for (let reply of comment.reply) {\r\n          this.pushToCommentsArray(reply);\r\n        }\r\n      }\r\n      this.pushToCommentsArray(comment);\r\n    }\r\n  }\r\n\r\n  private pushToCommentsArray(item) {\r\n    for (let exist of this.comments) {\r\n      if ( exist.userid == item.userid ) {\r\n        return;\r\n      }\r\n    }\r\n    this.comments.push({\r\n      userid: item.userid,\r\n      nickname: item.nickname\r\n    });\r\n  }\r\n\r\n  onTypingComment(field: HTMLTextAreaElement, text: string) {\r\n    if ( this.comments.length == 0 ) return;\r\n    const len: number = text.length;\r\n    if ( len < 2 ) return;\r\n    if ( text.substring(len - 2) == '[[' ) {\r\n      const dialogRef = this.dialog.open(CommentDialog, {\r\n        width: '300px',\r\n        data: {\r\n          title: this.content.title,\r\n          comment: this.comments,\r\n          user: undefined\r\n        }\r\n      });\r\n      dialogRef.afterClosed().subscribe(data => {\r\n        if ( !data ) return;\r\n        field.value += data.userid + ']]';\r\n      });\r\n    }\r\n  }\r\n\r\n  onWriteComment(field: HTMLTextAreaElement) {\r\n    const formData = {\r\n      comment: this.cmtWrite.value,\r\n      _id: this.num,\r\n      comments: this.comments\r\n    };\r\n    this.gameService.writeComment(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        field.value = '';\r\n        this.router.navigate(['/game/' + this.num]);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['댓글 작성 오류'], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onReplyComment(comment) {\r\n    if ( !this.authService.loggedIn() ) return;\r\n    const dialogRef = this.dialog.open(ReplyDialog, {\r\n      width: '300px',\r\n      data: {\r\n        title: this.content.title,\r\n        comments: this.comments,\r\n        comment: comment.comment,\r\n        reply: undefined\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      if ( !data ) return;\r\n      const formData = {\r\n        postNum: this.num,\r\n        cmtNum: comment.num,\r\n        comments: this.comments,\r\n        comment: data\r\n      }\r\n      this.gameService.replyComment(formData).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/game/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['답글 작성 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  onRemovePost() {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.gameService.removePost(this.num).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/game/list']);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onRemoveComment(cmtNum) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.gameService.removeComment(this.num, cmtNum).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/game/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onRemoveReply(cmtNum, reply) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.gameService.removeReply(this.num, cmtNum, reply).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/game/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제 오류'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onRecommend(isRecommend: Boolean) {\r\n    if ( !this.authService.loggedIn() ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['로그인 후 이용하실 수 있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n    } else {\r\n      this.gameService.recommend(this.num, isRecommend).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.router.navigate(['/game/' + this.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  requestBoard() {\r\n    this.gameService.requestBoard(this.num).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.content.boardRequest = 1;\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['요청되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  acceptBoard() {\r\n    this.gameService.acceptBoard(this.num, this.content.game.title, this.content.userid).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.content.boardRequest = 2;\r\n        this.content.board = data.link;\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['수락되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  viewBlock() {\r\n    this.funcService.popUp(this.funcService.ServerAddress + '/modals/view-block?game=' + this.num, 1000, 600);\r\n  }\r\n\r\n  toMyTempList() {\r\n    const dialogRef = this.dialog.open(TempDialog, {\r\n      width: '300px',\r\n      data: {\r\n        title: this.content.title,\r\n        text: this.content.title\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      if ( data ) {\r\n        this.gameService.toMyTempList(this.num, data).subscribe(result => {\r\n          if ( result.success ) {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: ['저장되었습니다.'], \r\n              type: 'success', \r\n              timeout: 2000\r\n            });\r\n          } else {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: [result.msg], \r\n              type: 'danger', \r\n              timeout: 3000\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  scrapDialog() {\r\n    this.dialog.open(ScrapDialog, {\r\n      width: '300px',\r\n      data: {\r\n        title: this.content.title,\r\n        text: '<iframe src=\"' + this.funcService.ServerAddress + '/#/play/' + this.num + '\" style=\"width: 560px; height: 480px;\"></iframe>'\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch(category, text) {\r\n    if ( text == '' ) {\r\n      this.gameService.takeAllPosts().subscribe(data => {\r\n        this.contents = data.posts;\r\n      });\r\n    } else {\r\n      this.gameService.takeSearchedPosts(category, text).subscribe(data => {\r\n        this.contents = data.posts;\r\n      });\r\n    }\r\n  }\r\n\r\n  extractDate(date) {\r\n    let writeDate = new Date(date);\r\n    let today = new Date();\r\n\r\n    let writeDateDay = writeDate.getDate();\r\n    let todayDate = today.getDate();\r\n\r\n    if ( writeDateDay != todayDate ) {\r\n      return (writeDate.getMonth() + 1) + '/' + writeDateDay;\r\n    } else {\r\n      if ( writeDate.getFullYear() == today.getFullYear() && writeDate.getMonth() == today.getMonth() ) {\r\n        let hour = writeDate.getHours();\r\n        let min = writeDate.getMinutes();\r\n        return (hour >= 10 ? hour : '0' + hour) + ':' + (min >= 10 ? min : '0' + min);\r\n      } else {\r\n        return (writeDate.getMonth() + 1) + '/' + writeDateDay;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  scrollToPost(el: HTMLElement) {\r\n    el.scrollIntoView();\r\n  }\r\n\r\n  paging(pageEvent: PageEvent) {\r\n    this.pagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.pagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/game/' + this.num]);\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  title: string,\r\n  text: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-game-dialog',\r\n  templateUrl: './game.component.dialog.html'\r\n})\r\nexport class ScrapDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ScrapDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) { }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  copyText(copy: HTMLInputElement) {\r\n    copy.select();\r\n    document.execCommand('copy');\r\n  }\r\n\r\n}\r\n","module.exports = \".undercity .col-lg-4 {\\r\\n    margin-bottom: 1.5rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.undercity h3 {\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.undercity .col-lg-4 p {\\r\\n    margin-right: .75rem;\\r\\n    margin-left: .75rem;\\r\\n}\\r\\n\\r\\n.undercity-img {\\r\\n    width: 350px;\\r\\n    height: 350px;\\r\\n}\\r\\n\\r\\n.undercity-including-img {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.text-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.posts {\\r\\n    padding-right: 20px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.posts-small {\\r\\n    text-align: left;\\r\\n    padding-left: 15%;\\r\\n    padding-right: 15%;\\r\\n}\\r\\n\\r\\n.carousel-item {\\r\\n    height: 42rem;\\r\\n}\\r\\n\\r\\nli {\\r\\n    margin: .75rem;\\r\\n}\\r\\n\\r\\n.featurette-divider {\\r\\n    margin: 5rem 0;\\r\\n}\\r\\n\\r\\n.featurette-heading {\\r\\n    font-weight: 300;\\r\\n    line-height: 1;\\r\\n    letter-spacing: -.05rem;\\r\\n}\\r\\n\\r\\n@media (min-width: 40em) {\\r\\n    .carousel-caption p {\\r\\n        margin-bottom: 1.25rem;\\r\\n        font-size: 1.25rem;\\r\\n        line-height: 1.4;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 62em) {\\r\\n    .featurette-heading {\\r\\n        margin-top: 7rem;\\r\\n    }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJO1FBQ0ksc0JBQXNCO1FBQ3RCLGtCQUFrQjtRQUNsQixnQkFBZ0I7SUFDcEI7QUFDSjs7QUFFQTtJQUNJO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVuZGVyY2l0eSAuY29sLWxnLTQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4udW5kZXJjaXR5IGgzIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbi51bmRlcmNpdHkgLmNvbC1sZy00IHAge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAuNzVyZW07XHJcbiAgICBtYXJnaW4tbGVmdDogLjc1cmVtO1xyXG59XHJcblxyXG4udW5kZXJjaXR5LWltZyB7XHJcbiAgICB3aWR0aDogMzUwcHg7XHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG59XHJcblxyXG4udW5kZXJjaXR5LWluY2x1ZGluZy1pbWcge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4udGV4dC1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuLnBvc3RzIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbi5wb3N0cy1zbWFsbCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNSU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNSU7XHJcbn1cclxuXHJcbi5jYXJvdXNlbC1pdGVtIHtcclxuICAgIGhlaWdodDogNDJyZW07XHJcbn1cclxuXHJcbmxpIHtcclxuICAgIG1hcmdpbjogLjc1cmVtO1xyXG59XHJcbiAgXHJcbi5mZWF0dXJldHRlLWRpdmlkZXIge1xyXG4gICAgbWFyZ2luOiA1cmVtIDA7XHJcbn1cclxuXHJcbi5mZWF0dXJldHRlLWhlYWRpbmcge1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IC0uMDVyZW07XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XHJcbiAgICAuY2Fyb3VzZWwtY2FwdGlvbiBwIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNjJlbSkge1xyXG4gICAgLmZlYXR1cmV0dGUtaGVhZGluZyB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogN3JlbTtcclxuICAgIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<div id=\\\"rwCarousel\\\" class=\\\"carousel slide mdl-shadow--2dp\\\" data-ride=\\\"carousel\\\">\\r\\n\\r\\n  <ol class=\\\"carousel-indicators\\\">\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"1\\\"></li>\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"2\\\"></li>\\r\\n  </ol>\\r\\n\\r\\n  <div class=\\\"carousel-inner\\\">\\r\\n    <div [class]=\\\"'carousel-item active bg-svg-' + backgrounds[0]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption text-left\\\">\\r\\n          <h3>{{carousel[0]?.title}}</h3>\\r\\n          <h4>최근 추가된 게임</h4>\\r\\n          <p>{{carousel[0]?.content}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"['/game/' + carousel[0]?._id]\\\" role=\\\"button\\\">게임으로</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div [class]=\\\"'carousel-item bg-svg-' + backgrounds[1]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n          <h3>{{carousel[1]?.title}}</h3>\\r\\n          <h4>최고 인기 게임</h4>\\r\\n          <p>{{carousel[1]?.content}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"['/game/' + carousel[1]?._id]\\\" role=\\\"button\\\">게임으로</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div [class]=\\\"'carousel-item bg-svg-' + backgrounds[2]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption text-right\\\">\\r\\n          <h3>{{carousel[2]?.title}}</h3>\\r\\n          <h4>최근 추가된 게시판</h4>\\r\\n          <p>생성된 날짜 : {{carousel[2]?.createdate}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"['/board/' + carousel[2]?.url + '/list']\\\" role=\\\"button\\\">게시판으로</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <a class=\\\"carousel-control-prev\\\" href=\\\"#rwCarousel\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\r\\n    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Previous</span>\\r\\n  </a>\\r\\n  <a class=\\\"carousel-control-next\\\" href=\\\"#rwCarousel\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\r\\n    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Next</span>\\r\\n  </a>\\r\\n</div>\\r\\n\\r\\n<section></section>\\r\\n<br/><br/>\\r\\n\\r\\n<div class=\\\"container undercity\\\">\\r\\n\\r\\n  <!-- ADMIN SECTION -->\\r\\n  <div class=\\\"row featurette\\\" *ngIf=\\\"user?.userid == 'admin'\\\">\\r\\n    <div class=\\\"col-md-5 order-md-1 undercity-including-img\\\">\\r\\n      <img src=\\\"images/home/admin.jpg\\\" class=\\\"img-fluid undercity-img\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7 order-md-2 mdl-layout--large-screen-only\\\">\\r\\n      <h3 class=\\\"featurette-heading\\\">반갑습니다, 어드민님</h3>\\r\\n      <a mat-button [routerLink]=\\\"['/admin']\\\">어드민 페이지</a>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7 order-md-2 mdl-layout--small-screen-only\\\" style=\\\"text-align: center;\\\">\\r\\n      <br/><h3 class=\\\"featurette-heading\\\">반갑습니다, 어드민님</h3>\\r\\n      <a mat-button [routerLink]=\\\"['/admin']\\\">어드민 페이지</a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr class=\\\"featurette-divider\\\" *ngIf=\\\"user?.userid == 'admin'\\\">\\r\\n\\r\\n  <ng-container *ngFor=\\\"let val of homeService.rows; index as i\\\">\\r\\n    <div class=\\\"row featurette\\\">\\r\\n      <div [class]=\\\"'col-md-5 undercity-including-img order-md-' + ((i + 1) % 2 + 1)\\\">\\r\\n        <img [src]=\\\"'images/home/home' + (i+1) + '.jpg'\\\" class=\\\"img-fluid undercity-img\\\">\\r\\n      </div>\\r\\n      <div [class]=\\\"'col-md-7 mdl-layout--large-screen-only ' + homeService.lrControl(i)\\\">\\r\\n        <h3 class=\\\"featurette-heading\\\">{{val.title}}</h3>\\r\\n        <p *ngFor=\\\"let content of val.contents\\\" class=\\\"posts\\\">{{content}}</p>\\r\\n      </div>\\r\\n      <div [class]=\\\"'col-md-7 mdl-layout--small-screen-only ' + homeService.lrControlSmall(i)\\\" style=\\\"text-align: center;\\\">\\r\\n        <br/><h3 class=\\\"featurette-heading\\\">{{val.title}}</h3>\\r\\n        <p *ngFor=\\\"let content of val.contents\\\" class=\\\"posts-small\\\">{{content}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr class=\\\"featurette-divider\\\">\\r\\n  </ng-container>\\r\\n\\r\\n</div>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HomeService } from '../../services/home.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n\r\n  user: any = undefined;\r\n  carousel: Array<any> = [];\r\n  backgrounds: Array<number>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private homeService: HomeService\r\n  ) {\r\n    this.funcService.setTitle('HOME');\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.backgrounds = [];\r\n    for (let i=0; i<3; i++) {\r\n      let idx: number = Math.floor(Math.random() * this.funcService.bgCounts);\r\n      let flag: boolean = i != 0;\r\n      while ( flag ) {\r\n        for (let j=0; j<this.backgrounds.length; j++) {\r\n          if ( idx == this.backgrounds[j] ) {\r\n            flag = true;\r\n            idx = Math.floor(Math.random() * this.funcService.bgCounts);\r\n            break;\r\n          } else {\r\n            flag = false;\r\n          }\r\n        }\r\n      }\r\n      this.backgrounds[i] = idx;\r\n    }\r\n\r\n    // this.user = {userid: 'admin'}; const s = ['what the hack', 'i don\\'t know', 'jesus', 'asdf', '?', 'hell yeah']; this.carousel = [];\r\n    // for(let i=0; i<3; i++) {this.carousel.push({_id: 123, title: s[Math.floor(Math.random() * s.length)], content: 'what', url: 'hello', createdate: 'yeah'});}\r\n\r\n    this.homeService.takeBests().subscribe(bests => {\r\n      this.carousel[0] = bests.recent;\r\n      this.carousel[1] = bests.recommend;\r\n      this.homeService.takeAddedSub().subscribe(data => {\r\n        this.carousel[2] = data.added;\r\n        if ( this.authService.loggedIn() ) {\r\n          this.authService.getProfile().subscribe(profile => {\r\n            this.user = profile.user;\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>로그인</h4><hr/>      \\r\\n      <br/><br/>\\r\\n\\r\\n      <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/><br/><br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"input-element\\\" color=\\\"primary\\\">로그인</button>\\r\\n          <br/><br/><br/><br/><br/><hr/>\\r\\n          <a [routerLink]=\\\"['/register']\\\" style=\\\"color: black; text-decoration: none;\\\">회원가입</a>\\r\\n          &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\\r\\n          <a [routerLink]=\\\"['/']\\\" style=\\\"color: black; text-decoration: none;\\\">아이디 찾기</a>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n<br/><br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\nimport { FuncService } from '../../services/func.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  userid: String;\r\n  pw: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService,\r\n    private funcService: FuncService\r\n    ) {\r\n      this.funcService.setTitle('로그인');\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    // console.log(this.username);\r\n    const user = {\r\n      userid: this.userid,\r\n      pw: this.pw\r\n    }\r\n\r\n    if ( this.userid == '' || this.pw == '' || this.userid == undefined || this.pw == undefined ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['필드가 비어있습니다.'], \r\n        type: 'danger',\r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    } else {\r\n\r\n      this.authService.authenticateUser(user).subscribe(data => {\r\n        if( data.success ) {\r\n          this.authService.storeUserData(data.token, data.user);\r\n          if ( this.funcService.getPreviousUrl().toLowerCase().includes('login') ) this.router.navigate(['/']);\r\n          else this.router.navigate([this.funcService.getPreviousUrl()]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [data.msg], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW9kaWZ5L21vZGlmeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>회원정보수정</h4><hr/><br/><br/>\\r\\n\\r\\n      <form (submit)=\\\"onModifyUser()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" [value]=\\\"user?.userid\\\" disabled>\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"기존 비밀번호 (필수)\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"새 비밀번호\\\" type=\\\"password\\\" name=\\\"newpw\\\" [(ngModel)]=\\\"newpw\\\">\\r\\n            <mat-hint><strong>비밀번호 미변경 시 공백 유지</strong></mat-hint>\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"닉네임\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"이메일\\\" type=\\\"text\\\" [value]=\\\"user?.email\\\" disabled>\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"한 줄 소개\\\" type=\\\"text\\\" name=\\\"introduction\\\" [(ngModel)]=\\\"introduction\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"input-element\\\" color=\\\"primary\\\">회원가입</button>\\r\\n          <br/><br/><br/><hr/>\\r\\n          회원코드 : [ {{user?._id}} ]\\r\\n        </div>\\r\\n      </form>\\r\\n      <button mat-raised-button (click)=\\\"addProfileImage(user?.userid)\\\" class=\\\"toProfile\\\" style=\\\"float: right;\\\">프로필 이미지 변경</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modify',\r\n  templateUrl: './modify.component.html',\r\n  styleUrls: ['./modify.component.css']\r\n})\r\nexport class ModifyComponent implements OnInit {\r\n  user: any;\r\n\r\n  pw: string;\r\n  newpw: string;\r\n  nickname: string;\r\n  introduction: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private funcService: FuncService,\r\n    private validateService: ValidateService,\r\n    private flashMessage: NgFlashMessageService,\r\n    private router: Router\r\n  ) {\r\n    this.funcService.setTitle('회원정보수정');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.user = profile.user;\r\n      this.nickname = this.user.nickname;\r\n      this.introduction = this.user.introduction;\r\n    });\r\n  }\r\n\r\n  onModifyUser() {\r\n    if ( !this.validateService.validateModify({pw: this.pw, nickname: this.nickname, introduction: this.introduction}) ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['필드가 비어있습니다.'], \r\n        type: 'danger',\r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    }\r\n\r\n    let conditions: any = this.validateService\r\n      .validateConditions({userid: this.user.userid, pw: (this.newpw == undefined || this.newpw == '' ? this.pw : this.newpw), nickname: this.nickname});\r\n    if ( !conditions.valid ) {\r\n      this.flashMessage.showFlashMessage({messages: [conditions.msg], type: 'danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    this.authService.authenticateUser({userid: this.user.userid, pw: this.pw}).subscribe(data => {\r\n      if ( !data.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['비밀번호가 잘못되었습니다.'], \r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      } else {\r\n        const formData = {\r\n          nickname: this.nickname,\r\n          pw: (this.newpw == undefined || this.newpw == '' ? '' : this.newpw),\r\n          introduction: this.introduction\r\n        };\r\n        this.authService.modifyUser(formData).subscribe(result => {\r\n          if ( result.success ) {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: ['회원정보가 변경되었습니다.'], \r\n              type: 'success',\r\n              timeout: 2000\r\n            });\r\n            this.router.navigate(['/']);\r\n          } else {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: [result.msg], \r\n              type: 'danger',\r\n              timeout: 3000\r\n            });\r\n          }\r\n        })\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  addProfileImage(userid) {\r\n    this.funcService.openWindowWithAuth(this.funcService.ServerAddress + '/modals/profile-image?userid=' + userid, userid);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm8tcGFnZS9uby1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section *ngIf=\\\"num != 'list'\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">PAGE NOT FOUND</h4>\\r\\n\\r\\n      <hr/>\\r\\n      <div class=\\\"posting\\\">\\r\\n        <img src=\\\"images/404.jpg\\\" style=\\\"width: 100%;\\\"><br/><br/>\\r\\n        페이지가 존재하지 않거나 접근이 거부되었습니다.<br/><br/>\\r\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"[this.funcService.getPreviousUrl()]\\\">이전 페이지로 돌아가기</a><br/><br/>\\r\\n      </div>\\r\\n      <br/><br/>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FuncService } from '../../services/func.service';\r\n\r\n@Component({\r\n  selector: 'app-no-page',\r\n  templateUrl: './no-page.component.html',\r\n  styleUrls: ['./no-page.component.css']\r\n})\r\nexport class NoPageComponent implements OnInit {\r\n  constructor(\r\n    private funcService: FuncService\r\n  ) {\r\n    this.funcService.setTitle('ERROR');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGxheS9wbGF5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"engine-layout\\\">\\r\\n\\r\\n  <a mat-button [href]=\\\"funcService.ServerAddress + '/#/game/' + num\\\" target=\\\"_blank\\\"\\r\\n    style=\\\"width: 100%; text-align: left; font-weight: normal; border: 1px solid grey;\\\">\\r\\n    {{playService?.data?.title}}\\r\\n  </a>\\r\\n\\r\\n  <!-- PHASE-CONTENT -->\\r\\n  <div class=\\\"stage-content\\\" [innerHTML]=\\\"playService?.phase?.content | safe\\\"></div>\\r\\n\\r\\n  <!-- CHOICES -->\\r\\n  <table style=\\\"width: 100%;\\\" *ngIf=\\\"!playService.end\\\">\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let choice of playService?.phase?.choice\\\" (click)=\\\"playService.select(choice?.change_set, choice?.stage_to)\\\" style=\\\"height: 50px;\\\">\\r\\n        <td class=\\\"stage-choice btn--stripe\\\">{{choice?.content}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <!-- END -->\\r\\n  <table *ngIf=\\\"playService.end\\\" class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"width: 100%;\\\">\\r\\n    <tr>\\r\\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">THE END.</td>\\r\\n      <td>최종점수 : {{playService?.score}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"2\\\"><button mat-button (click)=\\\"playService.replay()\\\" style=\\\"float: right;\\\">다시하기</button></td>\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n  <!-- SHOW PARAMETERS -->\\r\\n  <hr/>\\r\\n  <div class=\\\"row align-items-center\\\" *ngFor=\\\"let arr of playService?.paramArr\\\">\\r\\n    <div class=\\\"col-sm grid-cell\\\" *ngFor=\\\"let val of arr\\\">\\r\\n      <span *ngIf=\\\"playService.visible(val?.value?.visible)\\\">\\r\\n        {{val?.key}}<span>: </span>{{val?.value?.value}}\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { PlayService } from '../../services/play.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-play',\r\n  templateUrl: './play.component.html',\r\n  styleUrls: ['./play.component.css']\r\n})\r\nexport class PlayComponent implements OnInit {\r\n  num: string;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private playService: PlayService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.funcService.setTitle('PLAY');\r\n    this.num = this.route.snapshot.paramMap.get('num');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.playService.takeOneGame(this.num).subscribe(data => {\r\n      if ( !data.game ) this.router.navigate(['/no-page']);\r\n      else this.playService.gameSet(data.game);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section *ngIf=\\\"user\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">PROFILE &nbsp;-&nbsp; <span (click)=\\\"funcService.openInfoWindow(user.userid)\\\" class=\\\"toProfile\\\">{{user.userid}}</span></h4>\\r\\n      <span style=\\\"float: right\\\"><img [attr.src]=\\\"'images/profile/' + user.userid\\\" class=\\\"profileImage\\\"></span>\\r\\n      <hr/><br/><br/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 80%;\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">아이디</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.userid}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">닉네임</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.nickname}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">이메일</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.email}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">한 줄 소개</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.introduction}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">가입일</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.registerdate}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <br/><br/>\\r\\n\\r\\n      <a mat-raised-button [routerLink]=\\\"['/modify']\\\" style=\\\"float: right;\\\">회원정보수정</a>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section *ngIf=\\\"user?.coworkRequest?.length > 0\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>공동작업 요청</h4>\\r\\n      <hr/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">요청자</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">요청일시</th>\\r\\n            <th>처리</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of user?.coworkRequest | slice:reqPagingFrom:reqPagingTo;\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val?.title}}</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(val?.from?.userid)\\\">{{val?.from?.nickname}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val?.requestdate}}</td>\\r\\n            <td>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"acceptReq(val)\\\">수락</button>\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"rejectReq(val)\\\">거절</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"user?.coworkRequest?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"reqPaging($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>내 작업 목록</h4>\\r\\n      <hr/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">저장날짜</th>\\r\\n            <th>관리</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of temps | slice:tempPagingFrom:tempPagingTo;\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a [routerLink]=\\\"['/temp/' + val?._id]\\\"\\r\\n                style=\\\"color: black; text-decoration: none; font-weight: 400;\\\">{{val.title}}</a>\\r\\n            </td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val.savedate}}</td>\\r\\n            <td>\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"removeTemp(val?._id)\\\">삭제</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"temps?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"tempPaging($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>공동작업 목록</h4>\\r\\n      <hr/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th>저장날짜</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of coworks | slice:coworkPagingFrom:coworkPagingTo;\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a [routerLink]=\\\"['/temp/' + val?._id]\\\"\\r\\n                style=\\\"color: black; text-decoration: none; font-weight: 400;\\\">{{val.title}}</a>\\r\\n            </td>\\r\\n            <td>{{val.savedate}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"coworks?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"coworkPaging($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { GameService } from '../../services/game.service';\r\nimport { PageEvent } from '@angular/material';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n\r\n  user: Object;\r\n  temps: Array<any>;\r\n  coworks: Array<any>;\r\n\r\n  pagingSize = 25;\r\n  reqPagingFrom: Number = 0;\r\n  reqPagingTo: Number = this.pagingSize;\r\n  tempPagingFrom: Number = 0;\r\n  tempPagingTo: Number = this.pagingSize;\r\n  coworkPagingFrom: Number = 0;\r\n  coworkPagingTo: Number = this.pagingSize;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private funcService: FuncService,\r\n    private gameService: GameService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.user = profile.user;\r\n      this.funcService.setTitle(profile.user.nickname + ' :: PROFILE');\r\n      this.gameService.takeMyTemps().subscribe(result => {\r\n        this.temps = result.temps;\r\n        this.coworks = result.coworking;\r\n      });\r\n    });\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  reqPaging(pageEvent: PageEvent) {\r\n    this.reqPagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.reqPagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  tempPaging(pageEvent: PageEvent) {\r\n    this.tempPagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.tempPagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  coworkPaging(pageEvent: PageEvent) {\r\n    this.coworkPagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.coworkPagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  acceptReq(cr: any) {\r\n    if ( !confirm('수락하시겠습니까?') ) return;\r\n    this.gameService.acceptCoWorkReq(cr, true).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['수락되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/profile']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  rejectReq(cr: any) {\r\n    if ( !confirm('거절하시겠습니까?') ) return;\r\n    this.gameService.acceptCoWorkReq(cr, false).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['거절되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/profile']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  removeTemp(_id) {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.gameService.removeTemp(_id).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제되었습니다.'], \r\n            type: 'success', \r\n            timeout: 2000\r\n          });\r\n          this.router.navigate(['/profile']);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>회원가입</h4><hr/><br/><br/>\\r\\n\\r\\n      <form (submit)=\\\"onRegisterSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호 확인\\\" type=\\\"password\\\" name=\\\"pwchk\\\" [(ngModel)]=\\\"pwchk\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"닉네임\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"이메일\\\" type=\\\"text\\\" name=\\\"email\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n            <mat-error *ngIf=\\\"emailFormControl.hasError('email')\\\">\\r\\n              이메일을 입력해주세요.\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"input-element\\\">\\r\\n            <input matInput placeholder=\\\"한 줄 소개\\\" type=\\\"text\\\" name=\\\"introduction\\\" [(ngModel)]=\\\"introduction\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"input-element\\\" color=\\\"primary\\\">회원가입</button>\\r\\n          <br/><br/><br/><hr/>\\r\\n          <!-- 여기에다가 뭔가 알려둘 사항 같은 걸 써두면 됨 -->\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { FuncService } from 'src/app/services/func.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  userid: String;\r\n  pw: String;\r\n  pwchk: String;\r\n  nickname: String;\r\n  introduction: String;\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  constructor(\r\n    private validateService: ValidateService, \r\n    private flashMessage: NgFlashMessageService, \r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private funcService: FuncService\r\n    ) {\r\n      this.funcService.setTitle('회원가입');\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    const user = {\r\n      userid: this.userid,\r\n      pw: this.pw,\r\n      pwchk: this.pwchk,\r\n      nickname: this.nickname,\r\n      email: this.emailFormControl.value,\r\n      introduction: this.introduction\r\n    }\r\n\r\n    // Required Fields\r\n    if ( !this.validateService.validateRegister(user) ) {\r\n      this.flashMessage.showFlashMessage({messages: ['빈 항목이 있습니다'], type: 'danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Password check\r\n    if ( this.pw != this.pwchk ) {\r\n      this.flashMessage.showFlashMessage({messages: ['비밀번호가 일치하지 않습니다'], type: 'danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Check with conditions\r\n    let conditions: any = this.validateService.validateConditions(user);\r\n    if ( !conditions.valid ) {\r\n      this.flashMessage.showFlashMessage({messages: [conditions.msg], type: 'danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Validate Email\r\n    if( !this.validateService.validateEmail(user.email) ) {\r\n      this.flashMessage.showFlashMessage({messages: ['이메일 형식이 맞지 않습니다'], type: 'danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Register User\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['회원가입 완료 - 로그인 해주십시오'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n        // this.router.navigate(['/register']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3ViL3N1Yi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section *ngIf=\\\"authService.loggedIn()\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n\\r\\n      <h4>즐겨찾는 게시판</h4><hr/><br/>\\r\\n\\r\\n      <div *ngFor=\\\"let bookmark of bkMap | keyvalue\\\">\\r\\n        <h5 style=\\\"display: inline;\\\">{{bookmark?.key}}</h5><hr/>\\r\\n\\r\\n        <div style=\\\"padding-left: 3%; padding-right: 3%;\\\">\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let arr of bookmark?.value\\\">\\r\\n            <div class=\\\"col-sm md-auto grid-cell\\\" *ngFor=\\\"let val of arr\\\">\\r\\n              <a [routerLink]=\\\"['/board/' + val?.url + '/list']\\\">{{val.title}}</a>\\r\\n              <span style=\\\"float: right; cursor: pointer;\\\" (click)=\\\"remove(val)\\\">X</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <br/><br/><br/>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n\\r\\n      <div *ngIf=\\\"user\\\">\\r\\n        <div *ngFor=\\\"let sub of subs | keyvalue\\\">\\r\\n          <h5 style=\\\"display: inline;\\\">{{sub?.key}}</h5><hr/>\\r\\n\\r\\n          <div style=\\\"padding-left: 3%; padding-right: 3%;\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let arr of sub?.value\\\">\\r\\n              <div class=\\\"col-sm md-auto grid-cell\\\" *ngFor=\\\"let val of arr\\\">\\r\\n                <a [routerLink]=\\\"['/board/' + val?.url + '/list']\\\">{{val.title}}</a>\\r\\n                <span *ngIf=\\\"isInMyBookmark(val?.url)\\\" style=\\\"float: right; cursor: pointer;\\\" (click)=\\\"remove(val)\\\">X</span>\\r\\n                <span *ngIf=\\\"!isInMyBookmark(val?.url)\\\" style=\\\"float: right; cursor: pointer;\\\" (click)=\\\"add(val?.url)\\\">+</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <br/><br/><br/>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!authService.loggedIn()\\\">\\r\\n        <div *ngFor=\\\"let sub of subs | keyvalue\\\">\\r\\n          <h5 style=\\\"display: inline;\\\">{{sub?.key}}</h5><hr/>\\r\\n\\r\\n          <div style=\\\"padding-left: 3%; padding-right: 3%;\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let arr of sub?.value\\\">\\r\\n              <div class=\\\"col-sm md-auto grid-cell\\\" *ngFor=\\\"let val of arr\\\">\\r\\n                <a [routerLink]=\\\"['/board/' + val?.url + '/list']\\\">{{val.title}}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <br/><br/><br/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { BoardService } from '../../services/board.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-sub',\r\n  templateUrl: './sub.component.html',\r\n  styleUrls: ['./sub.component.css']\r\n})\r\nexport class SubComponent implements OnInit, OnDestroy {\r\n  navigationSubscription;\r\n\r\n  subs: Map<string, any[][]>;\r\n  user: any = undefined;\r\n  bkMap: Map<string, any[][]> = undefined;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private boardService: BoardService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) {\r\n    this.funcService.setTitle('서브게시판 목록');\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if ( e instanceof NavigationEnd ) {\r\n        this.initialiseInvites();\r\n      }\r\n    });\r\n  }\r\n\r\n  private mapInput(data: any, map: Map<string, any[][]>) {\r\n    let first: string = data.title.substring(0, 1).toUpperCase();\r\n\r\n    // alphabet (A~Z)\r\n    for (let i=65; i<=90; i++) {\r\n      let capital = String.fromCharCode(i);\r\n      if ( first == capital ) {\r\n        this.arrInput(map, capital, data);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 한글 (가~하)\r\n    for (let i=0; i<19; i++) {\r\n      let fcc = i * 588 + 44032;\r\n      let start = String.fromCharCode(fcc);\r\n      let end = String.fromCharCode(fcc + 587);\r\n      let regex = new RegExp('^[' + start + '-' + end + ']');\r\n      if ( regex.test(first) ) {\r\n        this.arrInput(map, start, data);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // number (0~9)\r\n    for (let i=0; i<=9; i++) {\r\n      let num = String(i);\r\n      if ( first == num ) {\r\n        this.arrInput(map, num, data);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // etc.\r\n    this.arrInput(map, 'etc', data);\r\n  }\r\n\r\n  private arrInput(map: Map<string, any[][]>, key, data) {\r\n    if ( map.get(key) ) {\r\n      if ( map.get(key)[map.get(key).length-1].length < 3 ) {\r\n        map.get(key)[map.get(key).length-1].push(data);\r\n      } else {\r\n        map.get(key).push([data]);\r\n      }\r\n    } else {\r\n      map.set(key, [[data]]);\r\n    }\r\n  }\r\n\r\n  isInMyBookmark(url): boolean {\r\n    for (let bookmark of this.user.bookmark) {\r\n      if ( url == bookmark.url ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  initialiseInvites() {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if ( this.navigationSubscription ) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if ( this.authService.loggedIn() ) {\r\n      this.authService.getProfile().subscribe(profile => {\r\n        this.user = profile.user;\r\n        this.bkMap = new Map<string, any[][]>();\r\n        for (let bk of this.user.bookmark) {\r\n          this.mapInput(bk, this.bkMap);\r\n        }\r\n      });\r\n    }\r\n    this.boardService.takeAllBoards().subscribe(data => {\r\n      this.subs = new Map<string, any[][]>();\r\n      for (let s of data.subs) {\r\n        this.mapInput(s, this.subs);\r\n      }\r\n    });\r\n  }\r\n\r\n  remove(bk: any) {\r\n    if ( !confirm('즐겨찾는 게시판에서 지우시겠습니까?') ) return;\r\n    this.boardService.removeBookmark(bk).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['삭제되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/sub']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  add(type) {\r\n    this.boardService.bookmark(type).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['등록되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/sub']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVtcC90ZW1wLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>제목을 입력해주세요.</p>\\r\\n  <mat-form-field style=\\\"width: 100%;\\\">\\r\\n    <input matInput [(ngModel)]=\\\"data.text\\\" #it placeholder=\\\"제목\\\" (click)=\\\"it.select()\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onClose()\\\">닫기</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.text\\\" cdkFocusInitial>확인</button>\\r\\n</div>\\r\\n\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\" #title>{{temp?.title}}</h4>\\r\\n      <span style=\\\"float: right; text-align: right; font-size: 80%;\\\">\\r\\n        제작자 : <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(creator?.userid)\\\">{{creator?.nickname}}</span><br/>\\r\\n        <span *ngIf=\\\"coworkers?.length > 0\\\">\\r\\n          공동제작자 :\\r\\n          <span *ngFor=\\\"let coworker of coworkers\\\" class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(coworker?.userid)\\\"> {{coworker?.nickname}}</span>\\r\\n        </span>\\r\\n        <span *ngIf=\\\"coworkers?.length == 0\\\">{{temp?.savedate}}</span>\\r\\n      </span>\\r\\n      <hr/><br/><br/>\\r\\n      \\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel style=\\\"width: 95%; margin: auto;\\\" *ngFor=\\\"let block of history\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              {{block?.savedate}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              {{block?.moves}}개의 행동 추가됨\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <p>\\r\\n            <b class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(coworkerMap?.get(block?.saveby)?.userid)\\\">{{coworkerMap?.get(block?.saveby)?.nickname}}</b> 님에 의해 수정됨.\\r\\n          </p>\\r\\n          <button mat-button (click)=\\\"viewBlock(block?.num)\\\">블록 보기</button>\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"versionRollBack(block?.num)\\\">되돌리기</button>\\r\\n        </mat-expansion-panel>\\r\\n        \\r\\n      </mat-accordion>\\r\\n      <br/><br/>\\r\\n      <div *ngIf=\\\"temp?.from || temp?.added?.length > 0\\\" class=\\\"original-section\\\">\\r\\n        <p *ngIf=\\\"temp?.from\\\">\\r\\n          이 게임은 <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(temp?.from?.userid)\\\">{{temp?.from?.nickname}}</span> 님의 <a class=\\\"original-added-title\\\" [routerLink]=\\\"['/game/' + temp?.from?.game]\\\">{{temp?.from?.title}}</a> 으로부터 참조되었습니다.\\r\\n        </p>\\r\\n        <p *ngIf=\\\"temp?.added?.length > 0\\\">\\r\\n          덧붙여진 게임 :<span *ngFor=\\\"let added of temp?.added\\\"><a class=\\\"original-added-title\\\" [routerLink]=\\\"['/game/' + added?.game]\\\"> {{added?.title}}</a> (<span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(added?.userid)\\\">{{added?.nickname}}</span>)</span>\\r\\n        </p>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"about\\\">\\r\\n    <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #about>\\r\\n    <button mat-menu-item *ngIf=\\\"user?._id == creator?._id\\\" (click)=\\\"modifyTitle(title)\\\">\\r\\n      <span>제목 수정</span>\\r\\n    </button>\\r\\n    <button mat-menu-item *ngIf=\\\"user?._id == creator?._id\\\" (click)=\\\"remove()\\\">\\r\\n      <span>삭제</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</section>\\r\\n\\r\\n<section *ngIf=\\\"user?._id == creator?._id\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">공동제작자 추가</h4>\\r\\n      <hr/><br/><br/>\\r\\n      \\r\\n      <mat-form-field appearance=\\\"outline\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <mat-label>검색</mat-label>\\r\\n        <input matInput placeholder=\\\"아이디 혹은 닉네임을 입력해주세요.\\\" (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n        <mat-icon matSuffix>search</mat-icon>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <br/><br/>\\r\\n\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">아이디</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">닉네임</th>\\r\\n            <th>요청</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let val of users | slice:pagingFrom:pagingTo; index as i\\\">\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <span class=\\\"toProfile\\\" (click)=\\\"funcService.openInfoWindow(val?.userid)\\\">{{val?.userid}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val?.nickname}}</td>\\r\\n            <td>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"sendRequest(val?._id, i)\\\">요청 보내기</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n\\r\\n      <mat-paginator [length]=\\\"temps?.length\\\" [pageSize]=\\\"pagingSize\\\" (page)=\\\"paging($event)\\\">\\r\\n      </mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { GameService } from '../../services/game.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { PageEvent } from '@angular/material';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-temp',\r\n  templateUrl: './temp.component.html',\r\n  styleUrls: ['./temp.component.css']\r\n})\r\nexport class TempComponent implements OnInit {\r\n  temp: any;\r\n  coworkerMap: Map<string, any>;\r\n  coworkers: Array<any>;\r\n  history: Array<any>;\r\n  creator: any;\r\n  user: any;\r\n\r\n  num: string;\r\n  count = 0;\r\n\r\n  users = [];\r\n\r\n  pagingSize = 25;\r\n  pagingFrom: Number = 0;\r\n  pagingTo: Number = this.pagingSize;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private gameService: GameService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.num = this.route.snapshot.paramMap.get('num');\r\n    this.gameService.takeMyOneTemp(this.num).subscribe(result => {\r\n      if ( result.deny ) {\r\n        this.router.navigate(['/no-page']);\r\n      } else {\r\n        this.temp = result.temp;\r\n        this.creator = result.creator;\r\n        this.coworkers = result.coworkers;\r\n\r\n        this.coworkerMap = new Map<string, any>();\r\n        this.history = [];\r\n        this.coworkerMap.set(this.creator._id, this.creator);\r\n        for (let coworker of this.coworkers) {\r\n          this.coworkerMap.set(coworker._id, coworker);\r\n        }\r\n        for (let i=0; i<this.temp.block.length; i++) {\r\n          let block = this.temp.block[i];\r\n          if ( block.saveby ) {\r\n            block.num = i + 1;\r\n            this.history.push(block);\r\n          }\r\n        }\r\n        this.history.reverse();\r\n        this.funcService.setTitle(this.temp.title + ' :: 작업중');\r\n        this.authService.getProfile().subscribe(profile => {\r\n          this.user = profile.user;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  viewBlock(i) {\r\n    this.funcService.popUp(this.funcService.ServerAddress + '/modals/view-temp-block?game=' + this.num + '&recent=' + i, 1000, 600);\r\n  }\r\n\r\n  versionRollBack(i) {\r\n    if ( !confirm('이 버전으로 되돌리시겠습니까?') ) return;\r\n    this.gameService.versionRollBack(this.num, i).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['롤백되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.ngOnInit();\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  modifyTitle(title: HTMLElement) {\r\n    const dialogRef = this.dialog.open(TempDialog, {\r\n      width: '300px',\r\n      data: {\r\n        title: this.temp.title,\r\n        text: ''\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      if ( data ) {\r\n        this.gameService.modifyTitle(this.temp._id, data).subscribe(result => {\r\n          if ( result.success ) {\r\n            title.innerHTML = data;\r\n            this.flashMessage.showFlashMessage({\r\n              messages: ['수정되었습니다.'], \r\n              type: 'success', \r\n              timeout: 2000\r\n            });\r\n          } else {\r\n            this.flashMessage.showFlashMessage({\r\n              messages: ['수정 오류'],\r\n              type: 'danger',\r\n              timeout: 3000\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  remove() {\r\n    if ( confirm('삭제하시겠습니까?') ) {\r\n      this.gameService.removeTemp(this.temp._id).subscribe(result => {\r\n        if ( result.success ) {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['삭제되었습니다.'], \r\n            type: 'success', \r\n            timeout: 2000\r\n          });\r\n          this.router.navigate(['/profile']);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: [result.msg],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onSearchChange(text: string) {\r\n    if ( text == '' ) {\r\n      this.users = [];\r\n      return;\r\n    } else if ( text.indexOf(' ') != -1 ) {\r\n      this.users = [];\r\n      return;\r\n    }\r\n    this.authService.findUserByIdOrNickname(text, this.temp._id).subscribe(data => {\r\n      this.users = data.users;\r\n    });\r\n  }\r\n\r\n  sendRequest(_id, idx) {\r\n    this.authService.sendRequest(_id, this.temp.title, this.temp._id).subscribe(result => {\r\n      if ( result.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['요청되었습니다.'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.users.splice(idx, 1);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [result.msg],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  paging(pageEvent: PageEvent) {\r\n    this.pagingFrom = pageEvent.pageIndex * this.pagingSize;\r\n    this.pagingTo = (pageEvent.pageIndex + 1) * this.pagingSize;\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  title: string,\r\n  text: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-temp-dialog',\r\n  templateUrl: './temp.component.dialog.html'\r\n})\r\nexport class TempDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TempDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) { }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVzdC90ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>HELLO</h4>\\r\\n      <hr/>\\r\\n      \\r\\n      <app-ngx-editor [config]=\\\"editorConfig\\\" [(ngModel)]=\\\"content\\\"></app-ngx-editor>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      \\r\\n      <button mat-button (click)=\\\"what()\\\">click</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FuncService } from '../../services/func.service';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css']\r\n})\r\nexport class TestComponent implements OnInit {\r\n  editorConfig: any;\r\n  content: string;\r\n\r\n  text: string;\r\n\r\n  constructor(\r\n    private funcService: FuncService\r\n  ) {\r\n    this.funcService.setTitle('TEST!!!!');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editorConfig = {\r\n      placeholder: '',\r\n      spellcheck: false,\r\n      height: '500',\r\n      minHeight: '500',\r\n      imageEndPoint: this.funcService.ServerAddress + '/tests/image'\r\n    };\r\n  }\r\n\r\n  what() {\r\n    alert(this.content);\r\n  }\r\n\r\n}\r\n","module.exports = \".previewButton {\\r\\n    float: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90b29sL3Rvb2wuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rvb2wvdG9vbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByZXZpZXdCdXR0b24ge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59Il19 */\"","module.exports = \"<div [innerHTML]=\\\"iframe | safe\\\"></div>\\r\\n\\r\\n<!-- game preview section -->\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n\\r\\n      <h4 style=\\\"display: inline;\\\">미리보기</h4>\\r\\n      <button mat-button class=\\\"previewButton\\\"\\r\\n        (click)=\\\"gameOn()\\\"\\r\\n        matTooltip=\\\"게임 적용\\\"\\r\\n        [matTooltipPosition]=\\\"tooltipPosition\\\"\\r\\n        [matTooltipShowDelay]=\\\"showDelay\\\">\\r\\n        <mat-icon>play_circle_outline</mat-icon>\\r\\n      </button>\\r\\n      <button mat-button class=\\\"previewButton\\\"\\r\\n        (click)=\\\"playService.replay()\\\"\\r\\n        matTooltip=\\\"리플레이\\\"\\r\\n        [matTooltipPosition]=\\\"tooltipPosition\\\"\\r\\n        [matTooltipShowDelay]=\\\"showDelay\\\">\\r\\n        <mat-icon>autorenew</mat-icon>\\r\\n      </button>\\r\\n      <hr/>\\r\\n\\r\\n      <!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ ENGINE (GAME) ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->\\r\\n      <div class=\\\"engine-layout\\\" *ngIf=\\\"set\\\">\\r\\n\\r\\n        <!-- PHASE-CONTENT -->\\r\\n        <div class=\\\"stage-content\\\" [innerHTML]=\\\"playService?.phase?.content | safe\\\"></div>\\r\\n\\r\\n        <!-- CHOICES -->\\r\\n        <table style=\\\"width: 100%;\\\" *ngIf=\\\"!playService.end\\\">\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let choice of playService?.phase?.choice\\\" (click)=\\\"playService.select(choice?.change_set, choice?.stage_to)\\\" style=\\\"height: 50px;\\\">\\r\\n              <td class=\\\"stage-choice btn--stripe\\\">{{choice?.content}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <!-- END -->\\r\\n        <table *ngIf=\\\"playService.end\\\" class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"width: 100%;\\\">\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">THE END.</td>\\r\\n            <td>최종점수 : {{playService?.score}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td colspan=\\\"2\\\"><button mat-button (click)=\\\"playService.replay()\\\" style=\\\"float: right;\\\">다시하기</button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n        <!-- SHOW PARAMETERS -->\\r\\n        <hr/>\\r\\n        <div class=\\\"row align-items-center\\\" *ngFor=\\\"let arr of playService?.paramArr\\\">\\r\\n          <div class=\\\"col-sm grid-cell\\\" *ngFor=\\\"let val of arr\\\">\\r\\n            <span *ngIf=\\\"playService.visible(val?.value?.visible)\\\">\\r\\n              {{val?.key}}<span>: </span>{{val?.value?.value}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ ENGINE (GAME) ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      \\r\\n      <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n        <mat-label>주석</mat-label>\\r\\n        <textarea matInput placeholder=\\\"\\\" rows=\\\"3\\\" #content></textarea>\\r\\n      </mat-form-field>\\r\\n      <table style=\\\"width: 100%;\\\">\\r\\n        <tr>\\r\\n          <td style=\\\"width: 30%;\\\">\\r\\n            <mat-form-field style=\\\"width: 80%;\\\" appearance=\\\"legacy\\\">\\r\\n              <mat-label>버전</mat-label>\\r\\n              <input matInput #version>\\r\\n              <mat-hint>형식: 1.0, 2.3, 0.1-beta 등</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n          <td style=\\\"width: 70%;\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"width: 100%;\\\" (click)=\\\"onWriteGame(content, version)\\\">작성</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FuncService } from '../../services/func.service';\r\nimport { GameService } from '../../services/game.service';\r\nimport { PlayService } from '../../services/play.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ComponentCanDeactivate } from '../../guards/component-can-deactivate';\r\n\r\n@Component({\r\n  selector: 'app-tool',\r\n  templateUrl: './tool.component.html',\r\n  styleUrls: ['./tool.component.css']\r\n})\r\nexport class ToolComponent extends ComponentCanDeactivate implements OnInit {\r\n  iframe: string;\r\n  temps: Array<any>;\r\n\r\n  tooltipPosition = 'above';\r\n  showDelay = 500;\r\n  set: boolean = false;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private gameService: GameService,\r\n    private playService: PlayService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    super();\r\n    this.funcService.setTitle('게임 만들기');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      if ( !profile.user.clean ) {\r\n        this.router.navigate(['/no-page']);\r\n        return false;\r\n      }\r\n      this.authService.getCode(profile.user.userid).subscribe(data => {\r\n        this.iframe = '<iframe src=\"'\r\n          + this.funcService.ServerAddress\r\n          + '/games/tool?uid='\r\n          + profile.user._id\r\n          + '&c='\r\n          + data.code\r\n          + '\" style=\"width: 100%; height: 1000px;\">loading...</iframe>';\r\n      });\r\n    });\r\n  }\r\n\r\n  gameOn() {\r\n    this.gameService.getSessionGame().subscribe(data => {\r\n      if ( data.success ) {\r\n        this.set = true;\r\n        this.playService.gameSet(data.data);\r\n      } else {\r\n        alert(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onWriteGame(content: HTMLTextAreaElement, version: HTMLInputElement) {\r\n    if ( version.value == undefined || version.value == '' ) {\r\n      alert('버전을 입력해주세요.');\r\n      version.focus();\r\n      return;\r\n    }\r\n    if ( !confirm('저장하시겠습니까?') ) return;\r\n    this.gameService.writeGame(content.value, version.value).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.router.navigate(['/game/' + data.num]);\r\n      } else {\r\n        alert('게임 생성 오류\\n' + data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd3JpdGUvd3JpdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>글쓰기</h4><hr/>\\r\\n      <div style=\\\"width: 98%; margin: auto;\\\">\\r\\n        <form (submit)=\\\"onWritePost()\\\">\\r\\n          <mat-form-field style=\\\"width: 100%;\\\">\\r\\n            <input matInput placeholder=\\\"제목\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\">\\r\\n          </mat-form-field>\\r\\n          <textarea [froalaEditor]=\\\"options\\\" [(ngModel)]=\\\"content\\\" name=\\\"content\\\"></textarea>\\r\\n          <br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" style=\\\"float: right;\\\">작성</button>\\r\\n        </form><br/>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { FuncService } from '../../services/func.service';\r\nimport { BoardService } from '../../services/board.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-write',\r\n  templateUrl: './write.component.html',\r\n  styleUrls: ['./write.component.css']\r\n})\r\nexport class WriteComponent implements OnInit {\r\n  options: any = {\r\n    placeholderText: '',\r\n    height: 500,\r\n    imageDefaultAlign: 'left',\r\n    imageDefaultWidth: 0,\r\n\r\n    charCounterCount: true,\r\n    imageUploadParam: 'image',\r\n    imageUploadURL: '/boards/images',\r\n    imageUploadMethod: 'POST',\r\n    imageMaxSize: 5 * 1024 * 1024,  // maximun size : 5MB\r\n    imageAllowTypes: [ 'jpeg', 'jpg', 'png', 'gif', 'webp' ],\r\n\r\n    toolbarButtonsXS: [\r\n      'insertImage', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript'\r\n    ]\r\n  };\r\n\r\n  type: String;\r\n  title: String;\r\n  content: String;\r\n\r\n  constructor(\r\n    private funcService: FuncService,\r\n    private route: ActivatedRoute,\r\n    private flashMessage: NgFlashMessageService,\r\n    private router: Router,\r\n    private boardService: BoardService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.type = this.route.snapshot.paramMap.get('type');\r\n    this.funcService.setTitle('글 작성');\r\n    this.boardService.checkBoardExists(this.type).subscribe(result => {\r\n      if ( !result.exist ) {\r\n        this.router.navigate(['/no-page']);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      if ( !profile.user.clean ) {\r\n        this.router.navigate(['/no-page']);\r\n        return false;\r\n      }\r\n      if ( this.type == 'notice' && profile.user.userid != 'admin' ) {\r\n        this.router.navigate(['/no-page']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onWritePost() {\r\n    if ( this.title == '' || this.title == undefined ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['제목이 비어있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    } else if ( this.content == '' || this.content == undefined ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['내용이 비어있습니다.'], \r\n        type: 'danger', \r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    } else {\r\n      const formData = {\r\n        type: this.type,\r\n        title: this.title,\r\n        content: this.content\r\n      };\r\n      this.boardService.writePost(formData).subscribe(data => {\r\n        if ( data.success ) {\r\n          this.router.navigate(['/board/' + this.type + '/' + data.num]);\r\n        } else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['글 작성 실패'], \r\n            type: 'danger', \r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService:AuthService, \r\n    private router:Router\r\n  ) { }\r\n\r\n   canActivate() {\r\n    if ( this.authService.loggedIn() ) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { HostListener } from \"@angular/core\";\r\n\r\nexport class ComponentCanDeactivate {\r\n \r\n    canDeactivate(): boolean {\r\n        return false;\r\n    }\r\n\r\n    @HostListener('window: beforeunload', ['$event'])\r\n    unloadNotification($event: any) {\r\n        if ( !this.canDeactivate() ) {\r\n            $event.returnValue = true;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ComponentCanDeactivate } from './component-can-deactivate';\n\n@Injectable()\nexport class DeactivateGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(component: ComponentCanDeactivate): boolean {\n    if( !component.canDeactivate() ) return confirm('나가시겠습니까?');\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { FuncService } from './func.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService\r\n  ) { }\r\n\r\n  registerUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/register', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/authenticate', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getProfile() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/users/profile', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n   loggedIn() {\r\n    return tokenNotExpired('id_token');\r\n   }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  modifyUser(user) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/modify', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  administrateUser(_id, clean: Boolean) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/admin', {_id: _id, clean: clean}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getAllUsers() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/get-all-users', {}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  sendRequest(_id, title, tempId) {\r\n    const formData = {\r\n      _id: _id,\r\n      title: title,\r\n      tempId: tempId\r\n    };\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/send-request', formData, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  findUserByIdOrNickname(text, tempId) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/find-user-by-id-or-nickname', {text: text, tempId: tempId}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getIdFromUserid(userid) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/get-id-from-userid', {userid: userid}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getCode(userid) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/modals/get-code', {userid: userid}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FuncService } from './func.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BoardService {\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  private loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  takeOnePost(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    let loggedIn = this.authService.loggedIn() ? 'yes' : 'no';\r\n    return this.http.get(this.funcService.ServerAddress + '/boards/take-one-post?num=' + num + '&loggedIn=' + loggedIn, {headers: headers})\r\n      .pipe(map(res => res.json()))\r\n  }\r\n\r\n  takeAllPosts(type) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/boards/take-all-posts?type=' + type, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeAllBoards() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/boards/take-all-boards', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeSearchedPosts(category, type, text) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/boards/take-searched-posts?category=' + category + '&type=' + type + '&text=' + text, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  writePost(post) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/write', post, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  writeComment(cmt) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/write-comment', cmt, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  replyComment(cmt) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/reply-comment', cmt, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removePost(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/remove-post', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeComment(postNum, cmtNum) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/remove-comment', {postNum: postNum, cmtNum: cmtNum}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeReply(postNum, cmtNum, reply) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/remove-reply', {postNum: postNum, cmtNum: cmtNum, reply: reply}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  recommend(num) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/recommend', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  checkBoardExists(type) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/boards/check-board-exists?type=' + type, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getSub(type) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/boards/sub?url=' + type, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  bookmark(type) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/bookmark', {type: type}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeBookmark(bookmark) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/boards/remove-bookmark', {url: bookmark.url, title: bookmark.title}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FuncService } from './func.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CorveeService {\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  private loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  takeOnePost(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    let loggedIn = this.authService.loggedIn() ? 'yes' : 'no';\r\n    return this.http.get(this.funcService.ServerAddress + '/corvees/take-one-post?num=' + num + '&loggedIn=' + loggedIn, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeAllPosts() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/corvees/take-all-posts', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeSearchedPosts(category, text) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/corvees/take-searched-posts?category=' + category + '&text=' + text, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeMyTemps() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/take-my-temps', {}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeTempUsers(coworkers) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/take-temp-users', {coworkers: coworkers}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  writePost(post) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/write', post, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  writeComment(cmt) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/write-comment', cmt, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  replyComment(cmt) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/reply-comment', cmt, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removePost(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/remove-post', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeComment(postNum, cmtNum) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/remove-comment', {postNum: postNum, cmtNum: cmtNum}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeReply(postNum, cmtNum, reply) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/remove-reply', {postNum: postNum, cmtNum: cmtNum, reply: reply}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  recommend(num) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/corvees/recommend', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nfunction _window() {\r\n  return window;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FuncService {\r\n  // public ServerAddress: String = \"http://13.125.172.123:3000\";\r\n  public ServerAddress: String = \"http://localhost:3000\";\r\n\r\n  public bgCounts = 10;\r\n\r\n  private previousUrl: string = undefined;\r\n  private currentUrl: string = undefined;\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private http: Http\r\n  ) {\r\n    this.currentUrl = this.router.url;\r\n    this.router.events.subscribe(event => {\r\n      if ( event instanceof NavigationEnd ) {\r\n        this.previousUrl = this.currentUrl;\r\n        this.currentUrl = event.url;\r\n      }\r\n    })\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.titleService.setTitle(title + ' :: RWrite');\r\n  }\r\n\r\n  getPreviousUrl() {\r\n    return this.previousUrl;\r\n  }\r\n\r\n  popUp(url, width, height) {\r\n    const option = 'width=' + width + ', height=' + height + ', left=300, top=100, scrollbars=yes, toolbars=no, location=no';\r\n    _window().open(url, '', option);\r\n  }\r\n\r\n  openWindow(url: string) {\r\n    this.popUp(url, 500, 600);\r\n  }\r\n\r\n  openInfoWindow(userid) {\r\n    this.openWindow(this.ServerAddress + '/modals/info?userid=' + userid);\r\n  }\r\n\r\n  openWindowWithAuth(url: string, userid: string) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    this.http.post(this.ServerAddress + '/modals/get-code', {userid: userid}, {headers: headers})\r\n      .pipe(map(res => res.json())).subscribe(data => {\r\n        const code = data.code;\r\n        this.openWindow(url + '&c=' + code);\r\n      });\r\n  }\r\n\r\n  getRandomSVGBackground() {\r\n    return Math.floor(Math.random() * this.bgCounts);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FuncService } from './func.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  private loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  writeGame(content, version) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/write', {content: content, version: version}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getSessionGame() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/games/session-game', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeOnePost(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    let loggedIn = this.authService.loggedIn() ? 'yes' : 'no';\r\n    return this.http.get(this.funcService.ServerAddress + '/games/take-one-post?num=' + num + '&loggedIn=' + loggedIn, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeAllPosts() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/games/take-all-posts', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeRequestedPosts() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/games/take-requested-posts', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeOneTemp(num) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/take-one-temp', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeMyOneTemp(num) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/take-my-one-temp', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeSearchedPosts(category, text) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/games/take-searched-posts?category=' + category + '&text=' + text, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  writeComment(cmt) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/write-comment', cmt, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  replyComment(cmt) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/reply-comment', cmt, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removePost(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/remove-post', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeComment(postNum, cmtNum) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/remove-comment', {postNum: postNum, cmtNum: cmtNum}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeReply(postNum, cmtNum, reply) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/remove-reply', {postNum: postNum, cmtNum: cmtNum, reply: reply}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  recommend(num, isRecommend: Boolean) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/recommend', {num: num, isRecommend: isRecommend}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  requestBoard(num) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/request-board', {num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  acceptBoard(num, title, userid) {\r\n    const formData = {\r\n      num: num,\r\n      accept: true,\r\n      title: title,\r\n      userid: userid\r\n    };\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/accept-board', formData, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  rejectBoard(num) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/accept-board', {num: num, accept: false}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  toMyTempList(num, title) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/to-my-temp-list', {num: num, title: title}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  takeMyTemps() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/take-my-temps', {}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  removeTemp(_id) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/remove-temp', {_id: _id}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  versionRollBack(num, length) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/version-rollback', {num: num, length: length}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  acceptCoWorkReq(coworkRequest, accept: boolean) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/accept-co-work-req', {accept: accept, coworkRequest: coworkRequest}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  modifyTitle(num, title) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/modify-title', {num: num, title: title}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  setTopPlayer(num: string, score: number) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/games/done', {score: score, num: num}, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\nimport { FuncService } from './func.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  rows = [\n    {\n      title: 'THE FIRST TITLE',\n      contents: [\n        '이렇게 내용을',\n        '써내려가면 되는 형식'\n      ]\n    }, {\n      title: 'THE SECOND TITLE',\n      contents: [\n        '이렇게 내용을',\n        '써내려가면 되는 형식'\n      ]\n    }, {\n      title: 'THE THIRD TITLE',\n      contents: [\n        '이렇게 내용을',\n        '써내려가면 되는 형식 ㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏ'\n      ]\n    }\n  ];\n\n  constructor(\n    private http: Http,\n    private funcService: FuncService\n  ) { }\n\n  takeBests() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.funcService.ServerAddress + '/games/best', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  takeAddedSub() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.funcService.ServerAddress + '/boards/home', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  lrControl(i: number) {\n    return i % 2 == 0 ? 'text-right' : 'order-md-2';\n  }\n\n  lrControlSmall(i: number) {\n    return i % 2 == 0 ? '' : 'order-md-2';\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { FuncService } from './func.service';\r\nimport { AuthService } from './auth.service';\r\nimport { GameService } from './game.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayService {\r\n  data: any;\r\n  private num: string;  // game number\r\n  count: number;  // entire number of the stage whose number is over 0\r\n  previousStageNum: number;\r\n\r\n  paramMap: Map<string, any>;  // Map\r\n  stageNum: number;\r\n  phaseNum: number;\r\n  phase: any;\r\n  paramArr: Array<any[]>;\r\n\r\n  end: boolean;\r\n  score: number;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private gameService: GameService\r\n  ) { }\r\n\r\n  gameSet(gameData) {\r\n    this.num = undefined;\r\n    this.count = 0;\r\n    this.stageNum = 1;\r\n    this.previousStageNum = this.stageNum;\r\n    this.phaseNum = 1;\r\n    this.end = false;\r\n    this.paramMap = new Map<string, any>();\r\n\r\n    this.data = gameData;\r\n    for (let obj of this.data.param) {\r\n      // [{param1: {value: 0, visible: true}}, {param2: {value: 100, visible: false}}, ...]\r\n      this.paramMap.set(obj.param_name, {value: obj.default, visible: obj.visible, type: obj.type});\r\n    }\r\n    this.paramArr = this.formatAsDoubleDimension();\r\n    for (let stage of this.data.stage) {\r\n      if ( stage.stage_num > 0 ) {\r\n        this.count++;\r\n        if ( stage.stage_num == 1 ) this.phase = this.encodePhase(stage.phase[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  numSet(num: string) {\r\n    this.num = num;\r\n  }\r\n\r\n  replay() {\r\n    let temp: string = undefined;\r\n    if ( this.num ) temp = this.num;\r\n    this.gameSet(this.data);\r\n    if ( temp ) this.num = temp;\r\n  }\r\n\r\n  private substituteParams(text): number {\r\n    if ( typeof text == 'number' ) return text;\r\n    this.paramMap.forEach((value, key) => {\r\n      text = text.split(key).join('this.paramMap.get(\"' + key + '\").value');\r\n    });\r\n    return eval(text);\r\n  }\r\n\r\n  private checkNextStageCondition(condition): boolean {\r\n    this.paramMap.forEach((value, key) => {\r\n      condition = condition.split(key).join('this.paramMap.get(\"' + key + '\").value');\r\n    });\r\n    let b: boolean = eval(condition);\r\n    return b;\r\n  }\r\n\r\n  private changeParmaValueWithPrompt(key: string) {\r\n    let changeValue = undefined;\r\n    const type = this.paramMap.get(key).type == 'number' ? ' (숫자)' : '';\r\n\r\n    do {\r\n      changeValue = prompt(\"'\" + key + \"'의 값을 입력해주세요.\" + type, this.paramMap.get(key).value);\r\n      if ( this.paramMap.get(key).type == 'number' ) {\r\n        if ( !isNaN(parseInt(changeValue)) ) changeValue = parseInt(changeValue);\r\n      } else {\r\n        if ( changeValue == '' ) changeValue = undefined;\r\n      }\r\n    } while ( typeof changeValue != this.paramMap.get(key).type );\r\n\r\n    let pv = this.paramMap.get(key);\r\n    pv.value = changeValue;\r\n    this.paramMap.delete(key);\r\n    this.paramMap.set(key, pv);\r\n  }\r\n\r\n  private choiceIfState(state): boolean {\r\n    let change: boolean = false;\r\n    this.paramMap.forEach((value, key) => {\r\n      state.if_slot = state.if_slot.split(key).join('this.paramMap.get(\"' + key + '\").value');\r\n      if ( key == state.do_slot ) change = true;\r\n      else state.do_slot = state.do_slot.split(key).join('this.paramMap.get(\"' + key + '\").value');\r\n    });\r\n    const b: boolean = eval(state.if_slot);\r\n    if ( b ) {\r\n      console.log(state.do_slot);\r\n      if ( change ) this.changeParmaValueWithPrompt(state.do_slot);\r\n      else eval(state.do_slot);\r\n    }\r\n    return b;\r\n  }\r\n\r\n  private getDone() {\r\n    this.end = true;\r\n    this.score = this.substituteParams(this.data.score);\r\n    if ( this.score == Infinity || this.score == -Infinity ) {\r\n      console.log('infinity');\r\n    }\r\n    if ( this.authService.loggedIn() && this.num ) {\r\n      this.gameService.setTopPlayer(this.num, this.score).subscribe(result => {console.log(result)});\r\n    }\r\n  }\r\n\r\n  private ending() {\r\n    this.getDone();\r\n    console.log('[[END]]');\r\n    if ( this.previousStageNum < 0 ) console.log('[[SELECTED ENDING: ' + this.previousStageNum + '-' + this.phaseNum + ']]');\r\n    else console.log('[[SELECTED ENDING: ' + (this.stageNum - 1) + '-' + this.phaseNum + ']]');\r\n  }\r\n\r\n  private noCondition() {\r\n    this.getDone();\r\n    console.log('[[NO MATCHED CONDITION]]');\r\n  }\r\n\r\n  private getRandomNumber(n1: number, n2: number): number {\r\n    if ( n1 < n2 ) {\r\n      return Math.floor(Math.random() * (n2 - n1 + 1)) + n1;\r\n    } else {\r\n      return Math.floor(Math.random() * (n1 - n2 + 1)) + n2;\r\n    }\r\n  }\r\n\r\n  select(changeSet: any, stage_to: number) {\r\n    // stage_num에 맞춰서 다음 스테이지 지정\r\n    if ( stage_to == 0 ) this.stageNum++;\r\n    else this.stageNum = stage_to;\r\n\r\n    // 선택지에 맞춰서 변수들 값 변화\r\n    let flag: boolean = false;\r\n    let elseState: string = undefined;\r\n    for (let val of changeSet) {\r\n      let b: boolean = false;\r\n      if ( val.if_slot == '' ) elseState = val.do_slot;\r\n      else b = this.choiceIfState(val);\r\n      if ( !flag ) flag = b;\r\n    }\r\n    if ( !flag && elseState ) {\r\n      this.choiceIfState({if_slot: '1', do_slot: elseState});\r\n    }\r\n\r\n    // this is the end of the game\r\n    if ( this.stageNum > this.count ) {\r\n      this.ending();\r\n      return true;\r\n    }\r\n\r\n    for (let stage of this.data.stage) {\r\n      if ( stage.stage_num == this.stageNum ) {\r\n        for (let phase of stage.phase) {\r\n          if ( this.checkNextStageCondition(phase.condition) ) {\r\n            this.phase = this.encodePhase(phase);\r\n            this.phaseNum = phase.phase_num;\r\n            if ( this.stageNum < 0 ) {\r\n              this.previousStageNum = this.stageNum;\r\n              this.stageNum = this.count;\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n        // in this part, there is no condition to be fit to an any param\r\n        this.noCondition();\r\n        return false;\r\n      }\r\n    }\r\n    // ends with no matched stage number\r\n    this.noCondition();\r\n  }\r\n\r\n  visible(text: string): boolean {\r\n    this.paramMap.forEach((value, key) => {\r\n      text = text.split(key).join('this.paramMap.get(\"' + key + '\").value');\r\n    });\r\n    return eval(text);\r\n  }\r\n\r\n  private formatAsDoubleDimension(): Array<any[]> {\r\n    let arr = new Array();\r\n    arr.push([]);\r\n    this.paramMap.forEach((value, key) => {\r\n      if ( value.visible ) {\r\n        if ( arr[arr.length-1].length < 3 ) {\r\n          arr[arr.length-1].push({key: key, value: value});\r\n        } else {\r\n          arr.push([{key: key, value: value}]);\r\n        }\r\n      }\r\n    });\r\n    return arr;\r\n  }\r\n\r\n  private encodePhase(phase): any {\r\n    let text: string = phase.content;\r\n    this.paramMap.forEach((value, key) => {\r\n      let regex = new RegExp('\\\\{\\\\{' + key + '\\\\}\\\\}', 'g');\r\n      text = text.replace(regex, value);\r\n    });\r\n    phase.content = text;\r\n    return phase;\r\n  }\r\n\r\n  takeOneGame(num) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/games/take-one-game?num=' + num, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if ( user.userid == undefined || user.email == undefined || user.pw == undefined || user.pwchk == undefined || user.introduction == undefined ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateConditions(user) {\r\n    // let idvalid = /^[a-z]+[a-z0-9]{6,15}$/g;\r\n    // if ( !idvalid.test(user.userid) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '아이디는 영어, 숫자로 이루어진 6~15 글자여야 합니다.'\r\n    //   };\r\n    // }\r\n\r\n    // let pwvalid = /^{10,}/;\r\n    // if ( !pwvalid.test(user.pw) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '비밀번호는 10글자 이상이어야 합니다.'\r\n    //   }\r\n    // }\r\n\r\n    // let nickValid = /^[a-Zㄱ-힣0-9]{4,8}$/;\r\n    // if ( !nickValid.test(user.nickname) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '닉네임은 한글, 알파벳, 숫자로 이루어진 4~8 글자여야 합니다.'\r\n    //   }\r\n    // }\r\n\r\n    return {\r\n      valid: true\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  validateModify(user) {\r\n    return !(user.pw == undefined || user.pw == '' ||\r\n        user.nickname == undefined || user.nickname == '' ||\r\n        user.introduction == undefined || user.introduction == '');\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafeHtml implements PipeTransform {\r\n  constructor (private dom: DomSanitizer) {\r\n\r\n  }\r\n  transform(value: string, args) {\r\n    return this.dom.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n"],"sourceRoot":""}
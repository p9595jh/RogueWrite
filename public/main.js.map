{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/board/board.component.css","webpack:///./src/app/components/board/board.component.html","webpack:///./src/app/components/board/board.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/modify/modify.component.css","webpack:///./src/app/components/modify/modify.component.html","webpack:///./src/app/components/modify/modify.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/test/test.component.css","webpack:///./src/app/components/test/test.component.html","webpack:///./src/app/components/test/test.component.ts","webpack:///./src/app/components/write/write.component.css","webpack:///./src/app/components/write/write.component.html","webpack:///./src/app/components/write/write.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/func.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,ulBAAulB,mCAAmC,8KAA8K,WAAW,wzCAAwzC,mrBAAmrB,w3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApvF;AACY;AACI;AACjB;AAOzC;IAGE,sBACU,WAAwB,EACxB,MAAc,EACd,YAAmC;QAFnC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAuB;QAL7C,UAAK,GAAG,4BAA4B,CAAC;IAM/B,CAAC;IAEP,oCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACjC,QAAQ,EAAE,CAAC,oBAAoB,CAAC;YAChC,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;IAlBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKuB,kEAAW;YAChB,sDAAM;YACA,uEAAqB;OANlC,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACyB;AACvB;AACY;AACwB;AAChC;AACS;AAEL;AACM;AACS;AACP;AACE;AAC4B;AAE3B;AACR;AACI;AACV;AAC8B;AAE/B;AACqB;AACS;AACZ;AACS;AACH;AACH;AACA;AACH;AAEjE,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8EAAa,EAAE;IACtC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0FAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,uFAAgB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IAC1E,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,oFAAe,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IACxE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,iFAAc,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iFAAc,+BAA8B,EAAE;IAC1E,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8EAAa,EAAE;CAC3C;AA0CD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,iFAAc;gBACd,0FAAiB;gBACjB,8EAAa;gBACb,uFAAgB;gBAChB,oFAAe;gBACf,iFAAc;gBACd,iFAAc;gBACd,8EAAa;aACd;YACD,OAAO,EAAE;gBACP,kEAAmB;gBACnB,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;gBACX,wDAAU;gBACV,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;gBAChD,wEAAqB;gBACrB,sEAAc;gBACd,gEAAc;gBACd,gFAAkB;gBAClB,yEAAe;gBACf,2EAAgB;gBAChB,4DAAY;gBACZ,0EAAkB,CAAC,OAAO,EAAE;gBAC5B,wEAAgB,CAAC,OAAO,EAAE;aAC3B;YACD,SAAS,EAAE;gBACT,2EAAe;gBACf,mEAAW;gBACX,6DAAS;gBACT,EAAE,OAAO,EAAE,yEAAiB,EAAE,QAAQ,EAAE,oFAA4B,EAAE;aACvE;YACD,SAAS,EAAE;gBACT,4DAAY;aACb;SACF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnFtB,mB;;;;;;;;;;;ACAA,gQAAgQ,KAAK,gBAAgB,8CAA8C,mBAAmB,gBAAgB,iBAAiB,mBAAmB,OAAO,oBAAoB,mEAAmE,iBAAiB,KAAK,kBAAkB,oEAAoE,yIAAyI,oBAAoB,sKAAsK,cAAc,sJAAsJ,KAAK,iBAAiB,OAAO,OAAO,GAAG,oBAAoB,gCAAgC,kBAAkB,8EAA8E,wBAAwB,wGAAwG,wYAAwY,cAAc,gDAAgD,4EAA4E,mrCAAmrC,YAAY,sbAAsb,SAAS,0HAA0H,uBAAuB,kBAAkB,KAAK,WAAW,oDAAoD,aAAa,MAAM,oBAAoB,mDAAmD,cAAc,2BAA2B,SAAS,2BAA2B,eAAe,qNAAqN,YAAY,qNAAqN,uBAAuB,kBAAkB,KAAK,WAAW,yDAAyD,gBAAgB,+BAA+B,cAAc,aAAa,MAAM,MAAM,+BAA+B,SAAS,aAAa,MAAM,MAAM,+BAA+B,eAAe,4FAA4F,MAAM,oBAAoB,yIAAyI,4hB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA71J;AACD;AACH;AACT;AAEqB;AACA;AAO1D;IAQE,wBACU,KAAqB,EACrB,WAAwB,EACxB,WAAwB,EACxB,IAAU;QAHV,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAM;QAElB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,4BAA4B,GAAC,IAAI,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAiB;YAC9K,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,IAAK,KAAI,CAAC,GAAG,EAAG;gBACd,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,aAAa,GAAG,2BAA2B,GAAC,KAAI,CAAC,IAAI,GAAC,OAAO,GAAC,KAAI,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,MAAkB;oBAC/L,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC9B,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,QAAQ,GAAG;YACb,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,eAAe,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAqB;YACtK,IAAK,IAAI,CAAC,OAAO,EAAG;gBAClB,oGAAoG;gBACpG,sDAAsD;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA3CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAUiB,8DAAc;YACR,kEAAW;YACX,kEAAW;YAClB,kDAAI;OAZT,cAAc,CA6C1B;IAAD,qBAAC;CAAA;AA7C0B;;;;;;;;;;;;ACb3B,mB;;;;;;;;;;;ACAA,4+E;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,kbAAkb,oBAAoB,0oBAA0oB,uBAAuB,+BAA+B,MAAM,MAAM,OAAO,MAAM,MAAM,iDAAiD,uBAAuB,kOAAkO,oBAAoB,goBAAgoB,uBAAuB,+BAA+B,MAAM,MAAM,OAAO,MAAM,MAAM,iDAAiD,uBAAuB,+I;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9sE;AACQ;AACA;AACjB;AAOzC;IAIE,wBACU,WAAwB,EACxB,MAAc,EACd,YAAmC;QAFnC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAuB;IACvC,CAAC;IAEP,iCAAQ,GAAR;IACA,CAAC;IAED,sCAAa,GAAb;QAAA,iBAyBC;QAxBC,8BAA8B;QAC9B,IAAM,IAAI,GAAG;YACX,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ;QAED,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,uCAAuC;gBACvC,2BAA2B;gBAC3B,sBAAsB;gBACtB,iBAAiB;gBACjB,MAAM;gBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;oBAC/B,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;oBACpB,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAC,IAAI;iBACb,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMuB,kEAAW;YAChB,sDAAM;YACA,uEAAqB;OAPlC,cAAc,CAwC1B;IAAD,qBAAC;CAAA;AAxC0B;;;;;;;;;;;;ACV3B,mB;;;;;;;;;;;ACAA,qD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,mB;;;;;;;;;;;ACAA,uPAAuP,OAAO,GAAG,aAAa,oHAAoH,YAAY,kLAAkL,aAAa,oLAAoL,eAAe,oLAAoL,YAAY,uLAAuL,mBAAmB,wMAAwM,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhzC;AACQ;AACjB;AAOzC;IAGE,0BACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,mCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO;YAC7C,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAhBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAKuB,kEAAW;YAChB,sDAAM;OALb,gBAAgB,CAkB5B;IAAD,uBAAC;CAAA;AAlB4B;;;;;;;;;;;;ACT7B,mB;;;;;;;;;;;ACAA,yaAAya,oBAAoB,81DAA81D,oBAAoB,mvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7vE;AACgB;AACR;AACA;AACjB;AACgB;AAOzD;IAYE,2BACU,eAAgC,EAChC,YAAmC,EACnC,WAAwB,EACxB,MAAc;QAHd,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAuB;QACnC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QATxB,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACrC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,KAAK;SACjB,CAAC,CAAC;IAOG,CAAC;IAEP,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAuDC;QAtDC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAExC,IAAM,IAAI,GAAG;YACX,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC;QAED,kBAAkB;QAClB,IAAK,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAG;YAClD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9F,OAAO,KAAK,CAAC;SACd;QAED,iBAAiB;QACjB,IAAK,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,EAAG;YAC3B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACnG,OAAO,KAAK,CAAC;SACd;QAED,wBAAwB;QACxB,IAAI,UAAU,GAAQ,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACpE,IAAK,CAAC,UAAU,CAAC,KAAK,EAAG;YACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAChG,OAAO,KAAK,CAAC;SACd;QAED,iBAAiB;QACjB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAG;YACpD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACnG,OAAO,KAAK,CAAC;SACd;QAED,gBAAgB;QAChB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAChD,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;oBACjC,QAAQ,EAAE,CAAC,qBAAqB,CAAC;oBACjC,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;oBACjC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;oBACpB,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC;IACJ,CAAC;IA7EU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAc2B,0EAAe;YAClB,uEAAqB;YACtB,kEAAW;YAChB,sDAAM;OAhBb,iBAAiB,CA+E7B;IAAD,wBAAC;CAAA;AA/E6B;;;;;;;;;;;;ACZ9B,mB;;;;;;;;;;;ACAA,orBAAorB,mBAAmB,qBAAqB,eAAe,oE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzrB;AAC+B;AAC/B;AACJ;AACT;AACqB;AAO1D;IAOE,uBACU,WAAwB,EACxB,EAAe,EACf,UAAsB,EACtB,IAAU;QAHV,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,eAAU,GAAV,UAAU,CAAY;QACtB,SAAI,GAAJ,IAAI,CAAM;QATpB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAW,gCAAgC,CAAC,CAAE,qCAAqC;QAUzF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAe;QAA5B,iBAYC;QAXC,IAAK,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG;YAC/B,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAM,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,QAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3B,QAAM,CAAC,MAAM,GAAG;gBACd,KAAI,CAAC,QAAQ,GAAG,QAAM,CAAC,MAAM,CAAC;YAChC,CAAC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IAED,gCAAQ,GAAR,UAAS,KAAe;QAAxB,iBAoBC;QAnBC,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpC,qGAAqG;QACrG,uBAAuB;QACvB,0BAA0B;QAC1B,gCAAgC;QAChC,MAAM;QAEN,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,cAAc,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACnJ,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,iCAAM;aAAV;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC;;;OAAA;IA3DU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASuB,kEAAW;YACpB,0DAAW;YACH,+DAAU;YAChB,kDAAI;OAXT,aAAa,CA6DzB;IAAD,oBAAC;CAAA;AA7DyB;;;;;;;;;;;;ACZ1B,mB;;;;;;;;;;;ACAA,oRAAoR,wTAAwT,uG;;;;;;;;;;;;;;;;;;;;;;;;ACA1hB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IAED,oCAAW,GAAX;QACE,iBAAiB;IACnB,CAAC;IATU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACW;AACC;AAGvD;IACE,mBACU,WAAuB,EACvB,MAAa;QADb,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAO;IAEvB,CAAC;IAEA,+BAAW,GAAX;QACC,IAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAdU,SAAS;QADrB,gEAAU,EAAE;yCAGW,kEAAW;YAChB,sDAAM;OAHZ,SAAS,CAerB;IAAD,gBAAC;CAAA;AAfqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLqB;AACG;AACT;AACU;AACF;AAK7C;IAIE,qBACU,IAAU,EACV,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAM;QACV,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,kCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,iBAAiB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAChG,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,sCAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,qBAAqB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACpG,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,gBAAgB,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACxF,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mCAAa,GAAb,UAAc,KAAK,EAAE,IAAI;QACvB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,+BAAS,GAAT;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAEA,8BAAQ,GAAR;QACC,OAAO,oEAAe,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEF,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IApDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMgB,kDAAI;YACG,yDAAW;OANvB,WAAW,CAqDvB;IAAD,kBAAC;CAAA;AArDuB;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AAK3C;IAGE;QAFO,kBAAa,GAAW,uBAAuB,CAAC;IAEvC,CAAC;IAHN,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAIvB;IAAD,kBAAC;CAAA;AAJuB;;;;;;;;;;;;;;;;;;;;;;;;;ACLmB;AAK3C;IAEE;IAAgB,CAAC;IAEjB,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAK,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,EAAE,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,EAAG;YAC9I,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,4CAAkB,GAAlB,UAAmB,IAAI;QACrB,2CAA2C;QAC3C,sCAAsC;QACtC,aAAa;QACb,oBAAoB;QACpB,6CAA6C;QAC7C,OAAO;QACP,IAAI;QAEJ,0BAA0B;QAC1B,kCAAkC;QAClC,aAAa;QACb,oBAAoB;QACpB,kCAAkC;QAClC,MAAM;QACN,IAAI;QAEJ,OAAO;YACL,KAAK,EAAE,IAAI;SACZ;IACH,CAAC;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,IAAI,EAAE,GAAG,2JAA2J,CAAC;QACrK,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IArCU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAsC3B;IAAD,sBAAC;CAAA;AAtC2B;;;;;;;;;;;;;ACL5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAE6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"mdl-demo mdl-base\\\">\\r\\n  <div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-tabs\\\">\\r\\n    <!-- <app-navbar></app-navbar> -->\\r\\n\\r\\n    <!-- header for large display -->\\r\\n    <header class=\\\"mdl-layout__header mdl-layout__header--scroll mdl-color--primary\\\">\\r\\n            \\r\\n      <!-- spacing -->\\r\\n      <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\r\\n      \\r\\n      <!-- title -->\\r\\n      <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\">\\r\\n        <h3 [routerLink]=\\\"['/']\\\" style=\\\"cursor: pointer; font-family: 'Ubuntu', sans-serif;\\\">RogueWrite</h3>\\r\\n        <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n        <nav class=\\\"mdl-navigation\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" >\\r\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/login']\\\">LOGIN</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/profile']\\\">PROFILE</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">LOGOUT</a>\\r\\n        </nav>\\r\\n      </div>\\r\\n      \\r\\n      <!-- spacing -->\\r\\n      <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\r\\n\\r\\n      <!-- nav bar -->\\r\\n      <div class=\\\"mdl-layout__tab-bar mdl-js-ripple-effect mdl-color--primary-dark\\\">\\r\\n        <a [routerLink]=\\\"['/']\\\" class=\\\"mdl-layout__tab is-active\\\">HOME</a>\\r\\n        <a [routerLink]=\\\"['/board/free']\\\" class=\\\"mdl-layout__tab\\\">자유게시판</a>\\r\\n        <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">Details</a>\\r\\n        <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">Technology</a>\\r\\n        <a href=\\\"#features\\\" class=\\\"mdl-layout__tab\\\">FAQ</a>\\r\\n      </div>\\r\\n    </header>\\r\\n\\r\\n    <!-- header for mobile -->\\r\\n    <header class=\\\"mdl-layout__header--scroll mdl-layout--small-screen-only mdl-color--primary\\\">\\r\\n      <div class=\\\"mdl-layout__header-row\\\">\\r\\n        <h3 class=\\\"mdl-navigation__link\\\" style=\\\"font-family: 'Ubuntu', sans-serif;\\\">RogueWrite</h3>\\r\\n        <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n        <nav class=\\\"mdl-navigation\\\">\\r\\n          <a *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/login']\\\">LOGIN</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/profile']\\\">PROFILE</a>\\r\\n          <a *ngIf=\\\"authService.loggedIn()\\\" class=\\\"mdl-navigation__link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">LOGOUT</a>\\r\\n        </nav>\\r\\n      </div>\\r\\n    </header>\\r\\n    <div class=\\\"mdl-layout__drawer mdl-layout--small-screen-only\\\">\\r\\n      <span class=\\\"mdl-layout__title\\\" style=\\\"font-family: 'Ubuntu', sans-serif;\\\">RogueWrite</span>\\r\\n      <nav class=\\\"mdl-navigation\\\">\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu1</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu2</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu3</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu4</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\">menu5</a>\\r\\n      </nav>\\r\\n    </div>\\r\\n\\r\\n    <ng-flash-message></ng-flash-message>\\r\\n    <main class=\\\"mdl-layout__content\\\">\\r\\n      <div class=\\\"mdl-layout__tab-panel is-active\\\" id=\\\"overview\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n        <!-- <section></section> -->\\r\\n      </div>\\r\\n\\r\\n      <!-- footer -->\\r\\n      <footer class=\\\"mdl-mega-footer\\\">\\r\\n        <div class=\\\"mdl-mega-footer--bottom-section\\\">\\r\\n          <div class=\\\"mdl-logo\\\">\\r\\n            powered by Project RogueWrite\\r\\n          </div>\\r\\n          <ul class=\\\"mdl-mega-footer--link-list\\\">\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://getmdl.io/index.html\\\">MDL</a></li>\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://material.angular.io/\\\">Angular Material</a></li>\\r\\n            <li><a target=\\\"_blank\\\" href=\\\"https://github.com/p9595jh/RogueWrite\\\">Github</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- footer -->\\r\\n\\r\\n    </main>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-src in MEANAuthApp';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n    ) { }\r\n\r\n  onLogoutClick() {\r\n    this.authService.logout();\r\n    this.flashMessage.showFlashMessage({\r\n      messages: ['You are logged out'], \r\n      type: 'success', \r\n      timeout: 3000\r\n    });\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MatInputModule } from '@angular/material';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\r\n\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { ModifyComponent } from './components/modify/modify.component';\r\nimport { BoardComponent } from './components/board/board.component';\r\nimport { WriteComponent } from './components/write/write.component';\r\nimport { TestComponent } from './components/test/test.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'modify', component: ModifyComponent, canActivate: [AuthGuard] },\r\n  { path: 'board/:type', component: BoardComponent },\r\n  { path: 'write', component: WriteComponent/*, canActivate: [AuthGuard]*/ },\r\n  { path: 'test', component: TestComponent }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    ModifyComponent,\r\n    BoardComponent,\r\n    WriteComponent,\r\n    TestComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes, {useHash: true}),\r\n    NgFlashMessagesModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    CommonModule,\r\n    FroalaEditorModule.forRoot(),\r\n    FroalaViewModule.forRoot()\r\n  ],\r\n  providers: [\r\n    ValidateService,\r\n    AuthService,\r\n    AuthGuard,\r\n    { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<section *ngIf=\\\"num\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4 style=\\\"display: inline;\\\">{{content?.title}}</h4>\\r\\n\\r\\n      <span style=\\\"float: right; text-align: right; font-size: 80%;\\\">\\r\\n        {{content?.nickname}}<br/>{{content?.writedate}}\\r\\n      </span>\\r\\n      <hr/>\\r\\n      <pre style=\\\"padding: 1%; padding-top: 5%;\\\">{{content?.content}}</pre>\\r\\n      <br/><br/>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\\\">\\r\\n          추천 {{content?.recommend}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <br/><hr/>\\r\\n\\r\\n      <!-- ############### table for comments ############### -->\\r\\n      <table style=\\\"width: 96%; margin: auto;\\\">\\r\\n        <tbody *ngFor=\\\"let comment of content?.comment\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <span style=\\\"font-size: 80%;\\\">{{comment?.writer}} &nbsp;|&nbsp; {{comment?.writedate}}</span>\\r\\n              <pre>{{comment?.comment}}</pre>\\r\\n            </td>\\r\\n            <!-- <td style=\\\"text-align: right; vertical-align: middle;\\\">\\r\\n              <button class=\\\"mdl-button mdl-js-button mdl-button--icon\\\" style=\\\"font-size: 90%;\\\">\\r\\n                ♡ 0\\r\\n              </button>\\r\\n            </td> -->\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n      <!-- ############### table for comments ############### -->\\r\\n\\r\\n      <!-- ############### writing area ############### -->\\r\\n      <form *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"onWriteComment()\\\">\\r\\n        <table style=\\\"width: 96%; margin: auto;\\\">\\r\\n          <tr style=\\\"text-align: center;\\\">\\r\\n            <td>\\r\\n              <mat-form-field style=\\\"width: 98%;\\\">\\r\\n                <textarea matInput placeholder=\\\"댓글을 작성해주세요.\\\" rows=\\\"3\\\" cols=\\\"80\\\" name=\\\"cmtWrite\\\" [(ngModel)]=\\\"cmtWrite\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n            <td>\\r\\n              <button mat-raised-button type=\\\"submit\\\">작성</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </form>\\r\\n      <!-- ############### writing area ############### -->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"postbtn\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"postbtn\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\">삭제</li>\\r\\n    <li class=\\\"mdl-menu__item\\\">편집</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>자유게시판</h4><hr/>\\r\\n      \\r\\n      <!-- for large display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--large-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">번호</th>\\r\\n            <th class=\\\"mdl-data-table__cell--non-numeric\\\">제목</th>\\r\\n            <th>글쓴이</th>\\r\\n            <th>조회수</th>\\r\\n            <th>추천</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let val of contents\\\">\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{val.num}}</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <a href=\\\"#\\\" style=\\\"color: black; text-decoration: none; font-weight: 400;\\\">{{val.title}}</a> \\r\\n              <span style=\\\"font-size: 85%; color: grey;\\\">[{{val.comment.length}}]</span>\\r\\n            </td>\\r\\n            <td>{{val.nickname}}</td>\\r\\n            <td>{{val.hit}}</td>\\r\\n            <td>{{val.recommend}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <!-- for small display -->\\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table mdl-layout--small-screen-only\\\" style=\\\"margin: auto; width: 98%;\\\">\\r\\n        <tbody *ngFor=\\\"let val of contents\\\">\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">\\r\\n              <div>\\r\\n                <a href=\\\"#\\\" style=\\\"color: black; text-decoration: none; font-weight: 400;\\\">{{val.title}}</a> \\r\\n              </div><div style=\\\"font-size: 85%; margin-top: 1%;\\\">\\r\\n                <span>{{val.nickname}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>조회 {{val.hit}}</span>&nbsp;&nbsp;&nbsp;\\r\\n                <span>추천 {{val.recommend}}</span>\\r\\n              </div>\\r\\n            </td>\\r\\n            <td style=\\\"color: grey;\\\">[{{val.comment.length}}]</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table><br/>\\r\\n      <div *ngIf=\\\"authService.loggedIn()\\\" style=\\\"float: right;\\\">\\r\\n        <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\">\\r\\n          글쓰기\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"btn1\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"btn1\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\" disabled>자주 가는 게시판으로 설정</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FuncService } from '../../services/func.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n  type: String;\r\n  num: String;\r\n  content: any;\r\n  contents: Object[];\r\n\r\n  cmtWrite: String;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private funcService: FuncService,\r\n    private authService: AuthService,\r\n    private http: Http\r\n  ) {\r\n    this.type = this.route.snapshot.paramMap.get('type');\r\n    this.num = this.route.snapshot.paramMap.get('num');\r\n  }\r\n\r\n  ngOnInit() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    this.http.get(this.funcService.ServerAddress + '/boards/takeAllPosts?type='+this.type, {headers: headers}).pipe(map((res: Response) => res.json())).subscribe((data: HavingPosts) => {\r\n      this.content = data.posts;\r\n      if ( this.num ) {\r\n        this.http.get(this.funcService.ServerAddress + '/boards/takeOnePost?type='+this.type+'&num='+this.num, {headers: headers}).pipe(map((res: Response) => res.json())).subscribe((result: HavingPost) => {\r\n          this.contents = result.post;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onWriteComment() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    let formData = {\r\n      comment: this.cmtWrite\r\n    };\r\n    this.http.post(this.funcService.ServerAddress + '/boards/write', formData, {headers: headers}).pipe(map((res: Response) => res.json())).subscribe((data: ResponseWriting) => {\r\n      if ( data.success ) {\r\n        // code to get back to the board list page, and it has to have 'num' variable to show content itself\r\n        // this.router.navigate['./board', needed parameters];\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\ninterface HavingPost {\r\n  post: any;\r\n}\r\n\r\ninterface HavingPosts {\r\n  posts: Object[];\r\n}\r\n\r\ninterface ResponseWriting {\r\n  success: Boolean;\r\n}\r\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>사이트 개요</h4><hr/>\\r\\n      간략한 설명 <br/>\\r\\n      이 사이트는 이러이러한 것을 하는 것이다 라던가 <br/>\\r\\n      아님 뭐 이미지를 넣던가 그런거 <br/>\\r\\n      <a [routerLink]=\\\"['./test']\\\">testing</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>자유게시판</h4><hr/>\\r\\n      <ul>\\r\\n        <li>게시글1</li>\\r\\n        <li>게시글2</li>\\r\\n        <li>게시글3</li>\\r\\n        <li>게시글4</li>\\r\\n        <li>게시글5</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"btn1\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"btn1\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\" disabled>자주 가는 게시판으로 설정</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>다른게시판</h4><hr/>\\r\\n      <ul>\\r\\n        <li>게시글1</li>\\r\\n        <li>게시글2</li>\\r\\n        <li>게시글3</li>\\r\\n        <li>게시글4</li>\\r\\n        <li>게시글5</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"btn2\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"btn2\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\" disabled>자주 가는 게시판으로 설정</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>글쓰기 폼 테스트</h4><hr/>\\r\\n      <div [froalaEditor]></div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\\\" id=\\\"btn2\\\">\\r\\n    <i class=\\\"material-icons\\\">more_vert</i>\\r\\n  </button>\\r\\n  <ul class=\\\"mdl-menu mdl-js-menu mdl-menu--bottom-right\\\" for=\\\"btn2\\\">\\r\\n    <li class=\\\"mdl-menu__item\\\" disabled>자주 가는 게시판으로 설정</li>\\r\\n  </ul>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>로그인</h4><hr/>\\r\\n      \\r\\n      <br/><br/>\\r\\n\\r\\n      <!-- login form for large display -->\\r\\n      <form class=\\\"mdl-layout--large-screen-only\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/><br/>\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/><br/><br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"largeInputEle\\\">로그인</button>\\r\\n          <br/><br/><br/><br/><br/><hr/>\\r\\n          <a [routerLink]=\\\"['../register']\\\" style=\\\"color: black; text-decoration: none;\\\">회원가입</a>\\r\\n          &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\\r\\n          <a href=\\\"#\\\" style=\\\"color: black; text-decoration: none;\\\">아이디/비밀번호 찾기</a>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <!-- login form for small display -->\\r\\n      <form class=\\\"mdl-layout--small-screen-only\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/><br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"smallInputEle\\\">로그인</button>\\r\\n          <br/><br/><br/><br/><br/><hr/>\\r\\n          <a [routerLink]=\\\"['../register']\\\" style=\\\"color: black; text-decoration: none;\\\">회원가입</a>\\r\\n          &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\\r\\n          <a href=\\\"#\\\" style=\\\"color: black; text-decoration: none;\\\">아이디/비밀번호 찾기</a>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n<br/><br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  userid: String;\r\n  pw: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    // console.log(this.username);\r\n    const user = {\r\n      userid: this.userid,\r\n      pw: this.pw\r\n    }\r\n\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.authService.storeUserData(data.token, data.user);\r\n        // this.flashMessage.showFlashMessage({\r\n        //   messages: [data.msg], \r\n        //   type: 'success', \r\n        //   timeout:3000\r\n        // });\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n            messages: [data.msg], \r\n            type: 'danger', \r\n            timeout:3000\r\n          });\r\n          this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  modify works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modify',\r\n  templateUrl: './modify.component.html',\r\n  styleUrls: ['./modify.component.css']\r\n})\r\nexport class ModifyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section *ngIf=\\\"user\\\" class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>PROFILE &nbsp;-&nbsp; {{user.userid}}</h4>\\r\\n      <hr/><br/>\\r\\n      \\r\\n      <table class=\\\"mdl-data-table mdl-js-data-table\\\" style=\\\"margin: auto; width: 80%;\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">아이디</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.userid}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">닉네임</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.nickname}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">이메일</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.email}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">한 줄 소개</td>\\r\\n            <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{user.introduction}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <br/><br/>\\r\\n\\r\\n      <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\" style=\\\"float: right;\\\" [routerLink]=\\\"['./modify']\\\">\\r\\n        회원정보 수정\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.user = profile.user;\r\n    }, \r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>회원가입</h4><hr/><br/><br/>\\r\\n\\r\\n      <!-- registration form for large display -->\\r\\n      <form class=\\\"mdl-layout--large-screen-only\\\" (submit)=\\\"onRegisterSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호 확인\\\" type=\\\"password\\\" name=\\\"pwchk\\\" [(ngModel)]=\\\"pwchk\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"닉네임\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"이메일\\\" type=\\\"text\\\" name=\\\"email\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n            <mat-error *ngIf=\\\"emailFormControl.hasError('email')\\\">\\r\\n              이메일을 입력해주세요.\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"largeInputEle\\\">\\r\\n            <input matInput placeholder=\\\"한 줄 소개\\\" type=\\\"text\\\" name=\\\"introduction\\\" [(ngModel)]=\\\"introduction\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"largeInputEle\\\">회원가입</button>\\r\\n          <br/><br/><br/><hr/>\\r\\n          여기에다가 뭔가 알려둘 사항 같은 걸 써두면 됨\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <!-- registration form for small display -->\\r\\n      <form class=\\\"mdl-layout--small-screen-only\\\" (submit)=\\\"onRegisterSubmit()\\\">\\r\\n        <div style=\\\"width: 100%; text-align: center;\\\">\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"아이디\\\" type=\\\"text\\\" name=\\\"userid\\\" [(ngModel)]=\\\"userid\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호\\\" type=\\\"password\\\" name=\\\"pw\\\" [(ngModel)]=\\\"pw\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"비밀번호 확인\\\" type=\\\"password\\\" name=\\\"pwchk\\\" [(ngModel)]=\\\"pwchk\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"닉네임\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"이메일\\\" type=\\\"text\\\" name=\\\"email\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n            <mat-error *ngIf=\\\"emailFormControl.hasError('email')\\\">\\r\\n              이메일을 입력해주세요.\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <mat-form-field class=\\\"smallInputEle\\\">\\r\\n            <input matInput placeholder=\\\"한 줄 소개\\\" type=\\\"text\\\" name=\\\"introduction\\\" [(ngModel)]=\\\"introduction\\\">\\r\\n          </mat-form-field>\\r\\n          <br/><br/>\\r\\n          <br/>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"smallInputEle\\\">회원가입</button>\\r\\n          <br/><br/><br/><hr/>\\r\\n          여기에다가 뭔가 알려둘 사항 같은 걸 써두면 됨\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  userid: String;\r\n  pw: String;\r\n  pwchk: String;\r\n  nickname: String;\r\n  email: String;\r\n  introduction: String;\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  constructor(\r\n    private validateService: ValidateService, \r\n    private flashMessage: NgFlashMessageService, \r\n    private authService: AuthService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    this.emailFormControl.setValue('email');\r\n\r\n    const user = {\r\n      userid: this.userid,\r\n      pw: this.pw,\r\n      pwchk: this.pwchk,\r\n      nickname: this.nickname,\r\n      email: this.email,\r\n      introduction: this.introduction\r\n    }\r\n\r\n    // Required Fields\r\n    if ( !this.validateService.validateRegister(user) ) {\r\n      this.flashMessage.showFlashMessage({messages: ['빈 항목이 있습니다'], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Password check\r\n    if ( this.pw != this.pwchk ) {\r\n      this.flashMessage.showFlashMessage({messages: ['비밀번호가 일치하지 않습니다'], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Check with conditions\r\n    let conditions: any = this.validateService.validateConditions(user);\r\n    if ( !conditions.valid ) {\r\n      this.flashMessage.showFlashMessage({messages: [conditions.msg], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Validate Email\r\n    if( !this.validateService.validateEmail(user.email) ) {\r\n      this.flashMessage.showFlashMessage({messages: ['이메일 형식이 맞지 않습니다'], type: 'danger', timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Register User\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['회원가입 완료 - 로그인 해주십시오'], \r\n          type: 'success', \r\n          timeout: 2000\r\n        });\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.msg], \r\n          type: 'danger', \r\n          timeout: 3000\r\n        });\r\n        this.router.navigate(['/register']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\n    <div class=\\\"mdl-card__supporting-text\\\">\\n      <h4>Test</h4><hr/>\\n\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(fileInput.files)\\\">\\n        <img *ngIf=\\\"imageSrc\\\" [src]=\\\"imageSrc\\\" class=\\\"avatar\\\">\\n        <br/>\\n        <input type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange(fileInput.files)\\\" #fileInput>\\n        <br/>\\n        <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"form.invalid || loading\\\">Save</button>\\n        <br/>\\n        <i *ngIf=\\\"loading\\\"></i>\\n      </form>\\n      <pre>{{form.value | json}}</pre>\\n      <pre>{{result | json}}</pre>\\n\\n    </div>\\n  </div>\\n</section>\\n\\n<section></section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { FuncService } from '../../services/func.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  form: FormGroup;\n  loading: Boolean = false;\n  imageSrc: Object = '/assets/images/john-resig.jpeg';  // have to set to the 'public' folder\n\n  result: any;\n\n  constructor(\n    private funcService: FuncService,\n    private fb: FormBuilder,\n    private httpClient: HttpClient,\n    private http: Http\n  ) {\n    this.form = this.fb.group({\n      avatar: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  onFileChange(files: FileList) {\n    if ( files && files.length > 0 ) {\n      const file = files[0];\n      const reader = new FileReader();\n\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.imageSrc = reader.result;\n      };\n\n      this.avatar.setValue(file.name);\n    }\n  }\n\n  onSubmit(files: FileList) {\n    const formData = new FormData();\n    formData.append('avatar', files[0]);\n\n    this.loading = true;\n    console.log(formData.get('avatar'));\n\n    // this.httpClient.post(`${this.funcService.ServerAddress}/upload/test`, formData).subscribe(res => {\n    //   this.result = res;\n    //   this.loading = false;\n    //   this.avatar.setValue(null);\n    // });\n\n    let headers = new Headers();\n    headers.append('Content-Type', 'multipart/form-data');\n    this.http.post(this.funcService.ServerAddress + '/upload/test', formData, {headers: headers}).pipe(map((res: Response) => res.json())).subscribe(data => {\n      this.result = data;\n      this.loading = false;\n      this.avatar.setValue(null);\n    });\n  }\n\n  get avatar() {\n    return this.form.get('avatar');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\r\\n  <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\r\\n    <div class=\\\"mdl-card__supporting-text\\\">\\r\\n      <h4>글쓰기</h4><hr/>\\r\\n      <mat-form-field style=\\\"width: 98%;\\\">\\r\\n        <input matInput placeholder=\\\"제목\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\">\\r\\n      </mat-form-field>\\r\\n      <form (click)=\\\"onWritePost()\\\">\\r\\n        <div [froalaEditor] [(ngModel)]=\\\"content\\\"></div><br/>\\r\\n        <button mat-raised-button type=\\\"submit\\\" style=\\\"float: right;\\\">작성</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section></section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-write',\r\n  templateUrl: './write.component.html',\r\n  styleUrls: ['./write.component.css']\r\n})\r\nexport class WriteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onWritePost() {\r\n    // writing a post\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService:AuthService, \r\n    private router:Router\r\n    ){\r\n  }\r\n\r\n   canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { FuncService } from './func.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private funcService: FuncService\r\n  ) { }\r\n\r\n  registerUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/register', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.funcService.ServerAddress + '/users/authenticate', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getProfile() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.funcService.ServerAddress + '/users/profile', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n   loggedIn() {\r\n    return tokenNotExpired('id_token');\r\n   }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuncService {\n  public ServerAddress: String = \"http://localhost:3000\";\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if ( user.userid == undefined || user.email == undefined || user.pw == undefined || user.pwchk == undefined || user.introduction == undefined ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateConditions(user) {\r\n    // let idvalid = /^[a-z]+[a-z0-9]{6,15}$/g;\r\n    // if ( !idvalid.test(user.userid) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '아이디는 영어, 숫자로 이루어진 6~15 글자여야 합니다'\r\n    //   };\r\n    // }\r\n\r\n    // let pwvalid = /^{10,}/;\r\n    // if ( !pwvalid.test(user.pw) ) {\r\n    //   return {\r\n    //     valid: false,\r\n    //     msg: '비밀번호는 10글자 이상이어야 합니다'\r\n    //   }\r\n    // }\r\n\r\n    return {\r\n      valid: true\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}
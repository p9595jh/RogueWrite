extends layout2
block content

    div#workspaceFantasy(style='height: 550px; width: 100%;')
    br

    div(style="text-align: center;")
        p#msg
        div(class="mdl-textfield mdl-js-textfield")
            input(class="mdl-textfield__input", type="text", id="t1", placeholder="HTML 태그")
        span &nbsp;&nbsp;&nbsp;
        button(class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect", style='width: 100px; height: 30px;', onclick='openEditor()') 에디터
        span &nbsp;&nbsp;&nbsp;
        button#save(class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored", style='width: 100px; height: 30px;', onclick='save()') 저장
    xml#toolbox(style='display: none')
        category(name='big_one')
            block(type='stage')
            block(type='phase')
            block(type='choice')
        category(name='small_one')
            block(type='text')
            block(type='math_number')
            block(type='condition')
            block(type='parameter')
    
    xml#startBlocks(style="display: none;")
        block(type="game", inline="false", x="20", y="20")

    div#tempData(style="display: none;") #{temp}

    script.
        //- @ set default workspace (workspaceFantasy)
        var workspaceFantasy = Blockly.inject('workspaceFantasy', {
            media: '../resources/blockly/google-blockly-82871b3/media/',
            toolbox: document.getElementById('toolbox')
        });
        Blockly.Xml.domToWorkspace(document.getElementById('startBlocks'), workspaceFantasy);
        //- ========================================

        //- @ function for viewing success/error messages
        const msg = document.getElementById("msg");
        function setMessage(text, color, time) {
            msg.innerHTML = text;
            msg.style.color = color;
            setTimeout(() => {msg.innerHTML = ''}, time);
        }
        //- ========================================

        //- @ set blocks from temp data to the default workspace
        if ( document.getElementById('tempData').innerHTML != '' ) {
            let xhr = new XMLHttpRequest();
            xhr.open('POST', './temp');
            xhr.setRequestHeader('Content-type', 'application/json');
            xhr.send('');

            xhr.addEventListener('load', () => {
                workspaceFantasy.clear();
                let result = JSON.parse(xhr.responseText);
                for (let block of result.block) {
                    Blockly.Events.fromJson(block, workspaceFantasy).run(true);
                }
            });
        }
        //- ========================================

        //- @ add event listener to the default workspace
        workspaceFantasy.addChangeListener((event) => {
            if ( event.type == Blockly.Events.UI ) return;

            let block = {block: event.toJson()};
            if ( block.block.type == 'finished_loading' ) return;
            //- console.log(block.block);

            let xhr = new XMLHttpRequest();
            xhr.open('POST', './blockEvents');
            xhr.setRequestHeader('Content-type', 'application/json');
            xhr.send(JSON.stringify(block));
        });
        //- ========================================

        //- @ function to save
        function save() {
            let code = Blockly.JavaScript.workspaceToCode(workspaceFantasy);
            //- title(string), stage(array), param(array), score(string)

            try {
                code = JSON.parse(code);
                code = JSON.stringify(code);
            } catch (e) {
                setMessage("에러가 발생하였습니다: " + e, "red", 2000);
                return false;
            }

            let xhr = new XMLHttpRequest();
            xhr.open('POST', './save');
            xhr.setRequestHeader('Content-type', 'application/json');
            xhr.send(code);

            xhr.addEventListener('load', () => {
                let result = JSON.parse(xhr.responseText);
                if ( result.success ) {
                    setMessage("저장되었습니다.", "blue", 1500);
                }
                else {
                    setMessage(result.msg, "red", 2000);
                }
            });
        }
        //- ========================================

        //- @ function to open editor
        function openEditor() {
            let w = 950;
            let h = 700;
            
            let x = (window.screen.width / 2) - (w / 2);
            let y = (window.screen.height / 2) - (h / 2);

            let tags = document.getElementById("t1").value;

            let option = "width=" + w +", height=" + h + ", resizable=no, scrollbars=no, status=no, left=" + x + ", top=" + y + ", screenX=" + x + ", screenY=" + y;
            window.open("./editor?tags=" + tags, "", option);
        }
